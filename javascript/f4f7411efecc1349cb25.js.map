{"version":3,"sources":["webpack:///f4f7411efecc1349cb25.js","webpack:///C:/Program Files (x86)/Jenkins/jobs/docs_template_master_ci/workspace/~/q/q.js?d91f","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?6f0e","webpack:///(webpack)/~/node-libs-browser/~/timers-browserify/main.js?69c1","webpack:///./util.js?8c7c","webpack:///./vendor/scriptjs.min.js?7388","webpack:///./commenting-callback.js?60d9","webpack:///./experiment.js?006e","webpack:///./insight.js?2be9","webpack:///./vendor/simple-expand.min.js"],"names":["webpackJsonp",25,"module","exports","__webpack_require__","process","setImmediate","definition","bootstrap","uncurryThis","f","call","apply","arguments","isObject","value","Object","isStopIteration","exception","object_toString","QReturnValue","makeStackTraceLong","error","promise","hasStacks","stack","indexOf","STACK_JUMP_SEPARATOR","stacks","p","source","unshift","concatedStacks","join","filterStackString","stackString","lines","split","desiredLines","i","length","line","isInternalFrame","isNodeFrame","push","stackLine","getFileNameAndLineNumber","attempt1","exec","Number","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qFileName","qStartingLine","qEndingLine","captureLine","Error","e","firstLine","deprecate","callback","name","alternative","console","warn","Q","Promise","isPromiseAlike","coerce","fulfill","defer","become","newPromise","resolvedPromise","array_reduce","messages","undefined","message","nextTick","promiseDispatch","progressListeners","deferred","object_create","prototype","resolve","op","operands","args","array_slice","valueOf","nearerValue","nearer","isPromise","inspect","state","longStackSupport","substring","reject","reason","notify","progress","progressListener","resolver","TypeError","race","answerPs","len","then","descriptor","fallback","result","inspected","when","fulfilled","rejected","progressed","object","isPending","isFulfilled","isRejected","resetUnhandledRejections","unhandledReasons","unhandledRejections","trackUnhandledRejections","trackRejection","emit","runAfter","array_indexOf","reportedUnhandledRejections","untrackRejection","at","atReport","splice","rejection","this","get","set","rhs","delete","post","thisp","keys","object_keys","master","isDef","dispatch","spread","async","makeGenerator","continuer","verb","arg","StopIteration","generator","done","errback","bind","spawn","_return","promised","all","self","promises","pendingCount","index","snapshot","any","prev","current","onFulfilled","onRejected","onProgress","allResolved","array_map","noop","allSettled","nodeify","nodeback","flush","task","domain","head","next","enter","runSingle","laterQueue","pop","flushing","isNodeJS","exit","setTimeout","tail","requestTick","toString","window","MessageChannel","channel","port1","onmessage","requestPortTick","port2","postMessage","Function","Array","slice","reduce","basis","map","collect","create","Type","object_hasOwnProperty","hasOwnProperty","key","ReturnValue","env","Q_DEBUG","makeNodeResolver","passByCopy","x","y","that","makePromise","_fulfilled","_rejected","newException","_progressed","newValue","threw","onerror","tap","fcall","thenResolve","thenReject","getUnhandledReasons","stopUnhandledRejectionTracking","array","del","mapply","send","mcall","invoke","fapply","fbind","concat","regardless","fail","fin","onUnhandledError","timeout","ms","timeoutId","code","clearTimeout","delay","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","bound","nmapply","npost","nsend","nmcall","ninvoke","noConflict",26,"cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","run","Item","fun","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask",27,"clearImmediate","Timeout","id","clearFn","_id","_clearFn","immediateIds","nextImmediateId","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","fn",28,"__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$script","loadLibrary","scriptUrl","JSON","stringify",29,"n","t","o","s","u","h","g","a","m","j","E","v","L","d","l","c","test","r","createElement","onload","ready","nextSibling","src","insertBefore","firstChild","document","getElementsByTagName","removeEventListener","order","shift","path",33,"$","deferreds","comment-init","Deferred","sidenote-init","attach","type","handler","errorHandler","getPromise","valueObject",34,"Experiment","root","_","m_objConfigurationPromise","retval","NinjaMode","ajax","url","configuration","m_objConfiguration","GenerateGuid","timestamp","Date","getTime","replace","Math","random","floor","toUpperCase","GetCookie","cookies","cookie","pos","decodeURIComponent","GetHashCode","input","charCodeAt","GetConfigurationAsync","GetCustomSettings","JsonDeserialize","IsEnabled","experimentName","customSettings","Boolean","experimentSetting","experimentRatio","sessionId","hash","ex","IsEnabledAsync","content","parse","SetCookie","options","encodeURIComponent","expires","milliseconds","setTime","toUTCString","secure","AmbientContext",35,"Trace","util","insight","traceError","debugConsoleLogEnabled","debugLogMsgs","debugLog","inMsg","log","getMetaTagContent","inMTName","myMTContent","setMetaTagContent","inMTContent","myMetaTag","appendChild","attr","processWEDCSCustomEventFromArray","inArray","MscomCustomEvent","formatErrorObjectToWedcsArray","errorObject","isBubbled","data","lineno","colno","errorSubscriber","tArray","subscribeErrors","Errors","subscribe","commentSubscriber","widget","commentErrorHandler","sidenoteSubscriber","sidenoteErrorHandler","setupLiveFyreTracking","commenting","commentPromise","sidenotePromise","firePageFocusEvent","setupPageFocusTracking","prevType","fireCopyEvent","txt","setupCopyTracking","getSelection","fireSwitcherEvent","switcher","selectedValue","setupSwitcherTracking","change","val","scrollArea","inName","scrollNA","scrollQuarter","scrollHalf","scrollThreeQuarter","scrollBot","currScrollArea","scrollAreaList","setCurrScrollArea","inIndex","scrollBottomElement","scrollPageHeight","viewportBottom","refreshScrollPageDimVars","tBottom","getBoundingClientRect","top","pageYOffset","body","height","innerHeight","suppressMobileEvents","fireScrollEvent","inScrollValue","fireScrollStopEvent","eventType","processScroll","stopEvent","scrollResizeTimer","innerWidth","tCurrPercent","round","scrollTimer","setupScrollTracking","addEventListener","resize","extractMetaFromAmbientContext","String","append","encodeURI","setupPerfTiming","performance","timing","navigationStart","timeInfoArr","elapsed","biMapping","author","contentlang","depot_name","document_id","experiment_id","gitcommit","original_content_git_url","pagetype","site_name","updated_at","setupBiTags","locale","currentLocale","getLanguageFromUrl","strs","isGlobalMetadataEnabled","meta","listMSMetadata","res","arr","enableWEDCS","varClickTracking","varCustomerTracking","varAutoFirePV","route","ctrl","__WEBPACK_AMD_REQUIRE_ARRAY__","config","paths","wedcs",37,"jQuery","SimpleExpand","defaults","hideMode","defaultSearchMode","defaultTarget","throwOnMissingTarget","keepStateInCookie","cookieName","settings","extend","findLevelOneDeep","parent","filterSelector","stopAtSelector","find","filter","parentsUntil","setInitialState","expander","targets","isExpanded","readState","removeClass","addClass","show","hide","checkKeepStateInCookiePreconditions","readCookie","jsonString","hasClass","cookieValue","saveState","raw","location","pathname","toggle","toggleCss","fadeToggle","isFunction","toggleClass","findTargets","searchMode","targetSelector","activate","jquery","each","click","simpleexpand","instance"],"mappings":"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","file":"f4f7411efecc1349cb25.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// vim:ts=4:sts=4:sw=4:\n\t/*!\n\t *\n\t * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n\t * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n\t *\n\t * With parts by Tyler Close\n\t * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n\t * at http://www.opensource.org/licenses/mit-license.html\n\t * Forked at ref_send.js version: 2009-05-11\n\t *\n\t * With parts by Mark Miller\n\t * Copyright (C) 2011 Google Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t */\n\t\n\t(function (definition) {\n\t    \"use strict\";\n\t\n\t    // This file will function properly as a <script> tag, or a module\n\t    // using CommonJS and NodeJS or RequireJS module formats.  In\n\t    // Common/Node/RequireJS, the module exports the Q API and when\n\t    // executed as a simple <script>, it creates a Q global instead.\n\t\n\t    // Montage Require\n\t    if (typeof bootstrap === \"function\") {\n\t        bootstrap(\"promise\", definition);\n\t\n\t    // CommonJS\n\t    } else if (true) {\n\t        module.exports = definition();\n\t\n\t    // RequireJS\n\t    } else if (typeof define === \"function\" && define.amd) {\n\t        define(definition);\n\t\n\t    // SES (Secure EcmaScript)\n\t    } else if (typeof ses !== \"undefined\") {\n\t        if (!ses.ok()) {\n\t            return;\n\t        } else {\n\t            ses.makeQ = definition;\n\t        }\n\t\n\t    // <script>\n\t    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n\t        // Prefer window over self for add-on scripts. Use self for\n\t        // non-windowed contexts.\n\t        var global = typeof window !== \"undefined\" ? window : self;\n\t\n\t        // Get the `window` object, save the previous Q global\n\t        // and initialize Q as a global.\n\t        var previousQ = global.Q;\n\t        global.Q = definition();\n\t\n\t        // Add a noConflict function so Q can be removed from the\n\t        // global namespace.\n\t        global.Q.noConflict = function () {\n\t            global.Q = previousQ;\n\t            return this;\n\t        };\n\t\n\t    } else {\n\t        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n\t    }\n\t\n\t})(function () {\n\t\"use strict\";\n\t\n\tvar hasStacks = false;\n\ttry {\n\t    throw new Error();\n\t} catch (e) {\n\t    hasStacks = !!e.stack;\n\t}\n\t\n\t// All code after this point will be filtered from stack traces reported\n\t// by Q.\n\tvar qStartingLine = captureLine();\n\tvar qFileName;\n\t\n\t// shims\n\t\n\t// used for fallback in \"allResolved\"\n\tvar noop = function () {};\n\t\n\t// Use the fastest possible means to execute a task in a future turn\n\t// of the event loop.\n\tvar nextTick =(function () {\n\t    // linked list of tasks (single, with head node)\n\t    var head = {task: void 0, next: null};\n\t    var tail = head;\n\t    var flushing = false;\n\t    var requestTick = void 0;\n\t    var isNodeJS = false;\n\t    // queue for late tasks, used by unhandled rejection tracking\n\t    var laterQueue = [];\n\t\n\t    function flush() {\n\t        /* jshint loopfunc: true */\n\t        var task, domain;\n\t\n\t        while (head.next) {\n\t            head = head.next;\n\t            task = head.task;\n\t            head.task = void 0;\n\t            domain = head.domain;\n\t\n\t            if (domain) {\n\t                head.domain = void 0;\n\t                domain.enter();\n\t            }\n\t            runSingle(task, domain);\n\t\n\t        }\n\t        while (laterQueue.length) {\n\t            task = laterQueue.pop();\n\t            runSingle(task);\n\t        }\n\t        flushing = false;\n\t    }\n\t    // runs a single function in the async queue\n\t    function runSingle(task, domain) {\n\t        try {\n\t            task();\n\t\n\t        } catch (e) {\n\t            if (isNodeJS) {\n\t                // In node, uncaught exceptions are considered fatal errors.\n\t                // Re-throw them synchronously to interrupt flushing!\n\t\n\t                // Ensure continuation if the uncaught exception is suppressed\n\t                // listening \"uncaughtException\" events (as domains does).\n\t                // Continue in next event to avoid tick recursion.\n\t                if (domain) {\n\t                    domain.exit();\n\t                }\n\t                setTimeout(flush, 0);\n\t                if (domain) {\n\t                    domain.enter();\n\t                }\n\t\n\t                throw e;\n\t\n\t            } else {\n\t                // In browsers, uncaught exceptions are not fatal.\n\t                // Re-throw them asynchronously to avoid slow-downs.\n\t                setTimeout(function () {\n\t                    throw e;\n\t                }, 0);\n\t            }\n\t        }\n\t\n\t        if (domain) {\n\t            domain.exit();\n\t        }\n\t    }\n\t\n\t    nextTick = function (task) {\n\t        tail = tail.next = {\n\t            task: task,\n\t            domain: isNodeJS && process.domain,\n\t            next: null\n\t        };\n\t\n\t        if (!flushing) {\n\t            flushing = true;\n\t            requestTick();\n\t        }\n\t    };\n\t\n\t    if (typeof process === \"object\" &&\n\t        process.toString() === \"[object process]\" && process.nextTick) {\n\t        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n\t        // To see through fake Node environments:\n\t        // * Mocha test runner - exposes a `process` global without a `nextTick`\n\t        // * Browserify - exposes a `process.nexTick` function that uses\n\t        //   `setTimeout`. In this case `setImmediate` is preferred because\n\t        //    it is faster. Browserify's `process.toString()` yields\n\t        //   \"[object Object]\", while in a real Node environment\n\t        //   `process.nextTick()` yields \"[object process]\".\n\t        isNodeJS = true;\n\t\n\t        requestTick = function () {\n\t            process.nextTick(flush);\n\t        };\n\t\n\t    } else if (typeof setImmediate === \"function\") {\n\t        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n\t        if (typeof window !== \"undefined\") {\n\t            requestTick = setImmediate.bind(window, flush);\n\t        } else {\n\t            requestTick = function () {\n\t                setImmediate(flush);\n\t            };\n\t        }\n\t\n\t    } else if (typeof MessageChannel !== \"undefined\") {\n\t        // modern browsers\n\t        // http://www.nonblocking.io/2011/06/windownexttick.html\n\t        var channel = new MessageChannel();\n\t        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n\t        // working message ports the first time a page loads.\n\t        channel.port1.onmessage = function () {\n\t            requestTick = requestPortTick;\n\t            channel.port1.onmessage = flush;\n\t            flush();\n\t        };\n\t        var requestPortTick = function () {\n\t            // Opera requires us to provide a message payload, regardless of\n\t            // whether we use it.\n\t            channel.port2.postMessage(0);\n\t        };\n\t        requestTick = function () {\n\t            setTimeout(flush, 0);\n\t            requestPortTick();\n\t        };\n\t\n\t    } else {\n\t        // old browsers\n\t        requestTick = function () {\n\t            setTimeout(flush, 0);\n\t        };\n\t    }\n\t    // runs a task after all other tasks have been run\n\t    // this is useful for unhandled rejection tracking that needs to happen\n\t    // after all `then`d tasks have been run.\n\t    nextTick.runAfter = function (task) {\n\t        laterQueue.push(task);\n\t        if (!flushing) {\n\t            flushing = true;\n\t            requestTick();\n\t        }\n\t    };\n\t    return nextTick;\n\t})();\n\t\n\t// Attempt to make generics safe in the face of downstream\n\t// modifications.\n\t// There is no situation where this is necessary.\n\t// If you need a security guarantee, these primordials need to be\n\t// deeply frozen anyway, and if you don’t need a security guarantee,\n\t// this is just plain paranoid.\n\t// However, this **might** have the nice side-effect of reducing the size of\n\t// the minified code by reducing x.call() to merely x()\n\t// See Mark Miller’s explanation of what this does.\n\t// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\n\tvar call = Function.call;\n\tfunction uncurryThis(f) {\n\t    return function () {\n\t        return call.apply(f, arguments);\n\t    };\n\t}\n\t// This is equivalent, but slower:\n\t// uncurryThis = Function_bind.bind(Function_bind.call);\n\t// http://jsperf.com/uncurrythis\n\t\n\tvar array_slice = uncurryThis(Array.prototype.slice);\n\t\n\tvar array_reduce = uncurryThis(\n\t    Array.prototype.reduce || function (callback, basis) {\n\t        var index = 0,\n\t            length = this.length;\n\t        // concerning the initial value, if one is not provided\n\t        if (arguments.length === 1) {\n\t            // seek to the first value in the array, accounting\n\t            // for the possibility that is is a sparse array\n\t            do {\n\t                if (index in this) {\n\t                    basis = this[index++];\n\t                    break;\n\t                }\n\t                if (++index >= length) {\n\t                    throw new TypeError();\n\t                }\n\t            } while (1);\n\t        }\n\t        // reduce\n\t        for (; index < length; index++) {\n\t            // account for the possibility that the array is sparse\n\t            if (index in this) {\n\t                basis = callback(basis, this[index], index);\n\t            }\n\t        }\n\t        return basis;\n\t    }\n\t);\n\t\n\tvar array_indexOf = uncurryThis(\n\t    Array.prototype.indexOf || function (value) {\n\t        // not a very good shim, but good enough for our one use of it\n\t        for (var i = 0; i < this.length; i++) {\n\t            if (this[i] === value) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    }\n\t);\n\t\n\tvar array_map = uncurryThis(\n\t    Array.prototype.map || function (callback, thisp) {\n\t        var self = this;\n\t        var collect = [];\n\t        array_reduce(self, function (undefined, value, index) {\n\t            collect.push(callback.call(thisp, value, index, self));\n\t        }, void 0);\n\t        return collect;\n\t    }\n\t);\n\t\n\tvar object_create = Object.create || function (prototype) {\n\t    function Type() { }\n\t    Type.prototype = prototype;\n\t    return new Type();\n\t};\n\t\n\tvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\t\n\tvar object_keys = Object.keys || function (object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t        if (object_hasOwnProperty(object, key)) {\n\t            keys.push(key);\n\t        }\n\t    }\n\t    return keys;\n\t};\n\t\n\tvar object_toString = uncurryThis(Object.prototype.toString);\n\t\n\tfunction isObject(value) {\n\t    return value === Object(value);\n\t}\n\t\n\t// generator related shims\n\t\n\t// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\n\tfunction isStopIteration(exception) {\n\t    return (\n\t        object_toString(exception) === \"[object StopIteration]\" ||\n\t        exception instanceof QReturnValue\n\t    );\n\t}\n\t\n\t// FIXME: Remove this helper and Q.return once ES6 generators are in\n\t// SpiderMonkey.\n\tvar QReturnValue;\n\tif (typeof ReturnValue !== \"undefined\") {\n\t    QReturnValue = ReturnValue;\n\t} else {\n\t    QReturnValue = function (value) {\n\t        this.value = value;\n\t    };\n\t}\n\t\n\t// long stack traces\n\t\n\tvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\t\n\tfunction makeStackTraceLong(error, promise) {\n\t    // If possible, transform the error stack trace by removing Node and Q\n\t    // cruft, then concatenating with the stack trace of `promise`. See #57.\n\t    if (hasStacks &&\n\t        promise.stack &&\n\t        typeof error === \"object\" &&\n\t        error !== null &&\n\t        error.stack &&\n\t        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n\t    ) {\n\t        var stacks = [];\n\t        for (var p = promise; !!p; p = p.source) {\n\t            if (p.stack) {\n\t                stacks.unshift(p.stack);\n\t            }\n\t        }\n\t        stacks.unshift(error.stack);\n\t\n\t        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n\t        error.stack = filterStackString(concatedStacks);\n\t    }\n\t}\n\t\n\tfunction filterStackString(stackString) {\n\t    var lines = stackString.split(\"\\n\");\n\t    var desiredLines = [];\n\t    for (var i = 0; i < lines.length; ++i) {\n\t        var line = lines[i];\n\t\n\t        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n\t            desiredLines.push(line);\n\t        }\n\t    }\n\t    return desiredLines.join(\"\\n\");\n\t}\n\t\n\tfunction isNodeFrame(stackLine) {\n\t    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n\t           stackLine.indexOf(\"(node.js:\") !== -1;\n\t}\n\t\n\tfunction getFileNameAndLineNumber(stackLine) {\n\t    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n\t    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n\t    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n\t    if (attempt1) {\n\t        return [attempt1[1], Number(attempt1[2])];\n\t    }\n\t\n\t    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n\t    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n\t    if (attempt2) {\n\t        return [attempt2[1], Number(attempt2[2])];\n\t    }\n\t\n\t    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n\t    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n\t    if (attempt3) {\n\t        return [attempt3[1], Number(attempt3[2])];\n\t    }\n\t}\n\t\n\tfunction isInternalFrame(stackLine) {\n\t    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\t\n\t    if (!fileNameAndLineNumber) {\n\t        return false;\n\t    }\n\t\n\t    var fileName = fileNameAndLineNumber[0];\n\t    var lineNumber = fileNameAndLineNumber[1];\n\t\n\t    return fileName === qFileName &&\n\t        lineNumber >= qStartingLine &&\n\t        lineNumber <= qEndingLine;\n\t}\n\t\n\t// discover own file name and line number range for filtering stack\n\t// traces\n\tfunction captureLine() {\n\t    if (!hasStacks) {\n\t        return;\n\t    }\n\t\n\t    try {\n\t        throw new Error();\n\t    } catch (e) {\n\t        var lines = e.stack.split(\"\\n\");\n\t        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n\t        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n\t        if (!fileNameAndLineNumber) {\n\t            return;\n\t        }\n\t\n\t        qFileName = fileNameAndLineNumber[0];\n\t        return fileNameAndLineNumber[1];\n\t    }\n\t}\n\t\n\tfunction deprecate(callback, name, alternative) {\n\t    return function () {\n\t        if (typeof console !== \"undefined\" &&\n\t            typeof console.warn === \"function\") {\n\t            console.warn(name + \" is deprecated, use \" + alternative +\n\t                         \" instead.\", new Error(\"\").stack);\n\t        }\n\t        return callback.apply(callback, arguments);\n\t    };\n\t}\n\t\n\t// end of shims\n\t// beginning of real work\n\t\n\t/**\n\t * Constructs a promise for an immediate reference, passes promises through, or\n\t * coerces promises from different systems.\n\t * @param value immediate reference or promise\n\t */\n\tfunction Q(value) {\n\t    // If the object is already a Promise, return it directly.  This enables\n\t    // the resolve function to both be used to created references from objects,\n\t    // but to tolerably coerce non-promises to promises.\n\t    if (value instanceof Promise) {\n\t        return value;\n\t    }\n\t\n\t    // assimilate thenables\n\t    if (isPromiseAlike(value)) {\n\t        return coerce(value);\n\t    } else {\n\t        return fulfill(value);\n\t    }\n\t}\n\tQ.resolve = Q;\n\t\n\t/**\n\t * Performs a task in a future turn of the event loop.\n\t * @param {Function} task\n\t */\n\tQ.nextTick = nextTick;\n\t\n\t/**\n\t * Controls whether or not long stack traces will be on\n\t */\n\tQ.longStackSupport = false;\n\t\n\t// enable long stacks if Q_DEBUG is set\n\tif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n\t    Q.longStackSupport = true;\n\t}\n\t\n\t/**\n\t * Constructs a {promise, resolve, reject} object.\n\t *\n\t * `resolve` is a callback to invoke with a more resolved value for the\n\t * promise. To fulfill the promise, invoke `resolve` with any value that is\n\t * not a thenable. To reject the promise, invoke `resolve` with a rejected\n\t * thenable, or invoke `reject` with the reason directly. To resolve the\n\t * promise to another thenable, thus putting it in the same state, invoke\n\t * `resolve` with that other thenable.\n\t */\n\tQ.defer = defer;\n\tfunction defer() {\n\t    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n\t    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n\t    // element of the messages array is itself an array of complete arguments to\n\t    // forward to the resolved promise.  We coerce the resolution value to a\n\t    // promise using the `resolve` function because it handles both fully\n\t    // non-thenable values and other thenables gracefully.\n\t    var messages = [], progressListeners = [], resolvedPromise;\n\t\n\t    var deferred = object_create(defer.prototype);\n\t    var promise = object_create(Promise.prototype);\n\t\n\t    promise.promiseDispatch = function (resolve, op, operands) {\n\t        var args = array_slice(arguments);\n\t        if (messages) {\n\t            messages.push(args);\n\t            if (op === \"when\" && operands[1]) { // progress operand\n\t                progressListeners.push(operands[1]);\n\t            }\n\t        } else {\n\t            Q.nextTick(function () {\n\t                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n\t            });\n\t        }\n\t    };\n\t\n\t    // XXX deprecated\n\t    promise.valueOf = function () {\n\t        if (messages) {\n\t            return promise;\n\t        }\n\t        var nearerValue = nearer(resolvedPromise);\n\t        if (isPromise(nearerValue)) {\n\t            resolvedPromise = nearerValue; // shorten chain\n\t        }\n\t        return nearerValue;\n\t    };\n\t\n\t    promise.inspect = function () {\n\t        if (!resolvedPromise) {\n\t            return { state: \"pending\" };\n\t        }\n\t        return resolvedPromise.inspect();\n\t    };\n\t\n\t    if (Q.longStackSupport && hasStacks) {\n\t        try {\n\t            throw new Error();\n\t        } catch (e) {\n\t            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n\t            // accessor around; that causes memory leaks as per GH-111. Just\n\t            // reify the stack trace as a string ASAP.\n\t            //\n\t            // At the same time, cut off the first line; it's always just\n\t            // \"[object Promise]\\n\", as per the `toString`.\n\t            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n\t        }\n\t    }\n\t\n\t    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n\t    // consolidating them into `become`, since otherwise we'd create new\n\t    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\t\n\t    function become(newPromise) {\n\t        resolvedPromise = newPromise;\n\t        promise.source = newPromise;\n\t\n\t        array_reduce(messages, function (undefined, message) {\n\t            Q.nextTick(function () {\n\t                newPromise.promiseDispatch.apply(newPromise, message);\n\t            });\n\t        }, void 0);\n\t\n\t        messages = void 0;\n\t        progressListeners = void 0;\n\t    }\n\t\n\t    deferred.promise = promise;\n\t    deferred.resolve = function (value) {\n\t        if (resolvedPromise) {\n\t            return;\n\t        }\n\t\n\t        become(Q(value));\n\t    };\n\t\n\t    deferred.fulfill = function (value) {\n\t        if (resolvedPromise) {\n\t            return;\n\t        }\n\t\n\t        become(fulfill(value));\n\t    };\n\t    deferred.reject = function (reason) {\n\t        if (resolvedPromise) {\n\t            return;\n\t        }\n\t\n\t        become(reject(reason));\n\t    };\n\t    deferred.notify = function (progress) {\n\t        if (resolvedPromise) {\n\t            return;\n\t        }\n\t\n\t        array_reduce(progressListeners, function (undefined, progressListener) {\n\t            Q.nextTick(function () {\n\t                progressListener(progress);\n\t            });\n\t        }, void 0);\n\t    };\n\t\n\t    return deferred;\n\t}\n\t\n\t/**\n\t * Creates a Node-style callback that will resolve or reject the deferred\n\t * promise.\n\t * @returns a nodeback\n\t */\n\tdefer.prototype.makeNodeResolver = function () {\n\t    var self = this;\n\t    return function (error, value) {\n\t        if (error) {\n\t            self.reject(error);\n\t        } else if (arguments.length > 2) {\n\t            self.resolve(array_slice(arguments, 1));\n\t        } else {\n\t            self.resolve(value);\n\t        }\n\t    };\n\t};\n\t\n\t/**\n\t * @param resolver {Function} a function that returns nothing and accepts\n\t * the resolve, reject, and notify functions for a deferred.\n\t * @returns a promise that may be resolved with the given resolve and reject\n\t * functions, or rejected by a thrown exception in resolver\n\t */\n\tQ.Promise = promise; // ES6\n\tQ.promise = promise;\n\tfunction promise(resolver) {\n\t    if (typeof resolver !== \"function\") {\n\t        throw new TypeError(\"resolver must be a function.\");\n\t    }\n\t    var deferred = defer();\n\t    try {\n\t        resolver(deferred.resolve, deferred.reject, deferred.notify);\n\t    } catch (reason) {\n\t        deferred.reject(reason);\n\t    }\n\t    return deferred.promise;\n\t}\n\t\n\tpromise.race = race; // ES6\n\tpromise.all = all; // ES6\n\tpromise.reject = reject; // ES6\n\tpromise.resolve = Q; // ES6\n\t\n\t// XXX experimental.  This method is a way to denote that a local value is\n\t// serializable and should be immediately dispatched to a remote upon request,\n\t// instead of passing a reference.\n\tQ.passByCopy = function (object) {\n\t    //freeze(object);\n\t    //passByCopies.set(object, true);\n\t    return object;\n\t};\n\t\n\tPromise.prototype.passByCopy = function () {\n\t    //freeze(object);\n\t    //passByCopies.set(object, true);\n\t    return this;\n\t};\n\t\n\t/**\n\t * If two promises eventually fulfill to the same value, promises that value,\n\t * but otherwise rejects.\n\t * @param x {Any*}\n\t * @param y {Any*}\n\t * @returns {Any*} a promise for x and y if they are the same, but a rejection\n\t * otherwise.\n\t *\n\t */\n\tQ.join = function (x, y) {\n\t    return Q(x).join(y);\n\t};\n\t\n\tPromise.prototype.join = function (that) {\n\t    return Q([this, that]).spread(function (x, y) {\n\t        if (x === y) {\n\t            // TODO: \"===\" should be Object.is or equiv\n\t            return x;\n\t        } else {\n\t            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n\t        }\n\t    });\n\t};\n\t\n\t/**\n\t * Returns a promise for the first of an array of promises to become settled.\n\t * @param answers {Array[Any*]} promises to race\n\t * @returns {Any*} the first promise to be settled\n\t */\n\tQ.race = race;\n\tfunction race(answerPs) {\n\t    return promise(function (resolve, reject) {\n\t        // Switch to this once we can assume at least ES5\n\t        // answerPs.forEach(function (answerP) {\n\t        //     Q(answerP).then(resolve, reject);\n\t        // });\n\t        // Use this in the meantime\n\t        for (var i = 0, len = answerPs.length; i < len; i++) {\n\t            Q(answerPs[i]).then(resolve, reject);\n\t        }\n\t    });\n\t}\n\t\n\tPromise.prototype.race = function () {\n\t    return this.then(Q.race);\n\t};\n\t\n\t/**\n\t * Constructs a Promise with a promise descriptor object and optional fallback\n\t * function.  The descriptor contains methods like when(rejected), get(name),\n\t * set(name, value), post(name, args), and delete(name), which all\n\t * return either a value, a promise for a value, or a rejection.  The fallback\n\t * accepts the operation name, a resolver, and any further arguments that would\n\t * have been forwarded to the appropriate method above had a method been\n\t * provided with the proper name.  The API makes no guarantees about the nature\n\t * of the returned object, apart from that it is usable whereever promises are\n\t * bought and sold.\n\t */\n\tQ.makePromise = Promise;\n\tfunction Promise(descriptor, fallback, inspect) {\n\t    if (fallback === void 0) {\n\t        fallback = function (op) {\n\t            return reject(new Error(\n\t                \"Promise does not support operation: \" + op\n\t            ));\n\t        };\n\t    }\n\t    if (inspect === void 0) {\n\t        inspect = function () {\n\t            return {state: \"unknown\"};\n\t        };\n\t    }\n\t\n\t    var promise = object_create(Promise.prototype);\n\t\n\t    promise.promiseDispatch = function (resolve, op, args) {\n\t        var result;\n\t        try {\n\t            if (descriptor[op]) {\n\t                result = descriptor[op].apply(promise, args);\n\t            } else {\n\t                result = fallback.call(promise, op, args);\n\t            }\n\t        } catch (exception) {\n\t            result = reject(exception);\n\t        }\n\t        if (resolve) {\n\t            resolve(result);\n\t        }\n\t    };\n\t\n\t    promise.inspect = inspect;\n\t\n\t    // XXX deprecated `valueOf` and `exception` support\n\t    if (inspect) {\n\t        var inspected = inspect();\n\t        if (inspected.state === \"rejected\") {\n\t            promise.exception = inspected.reason;\n\t        }\n\t\n\t        promise.valueOf = function () {\n\t            var inspected = inspect();\n\t            if (inspected.state === \"pending\" ||\n\t                inspected.state === \"rejected\") {\n\t                return promise;\n\t            }\n\t            return inspected.value;\n\t        };\n\t    }\n\t\n\t    return promise;\n\t}\n\t\n\tPromise.prototype.toString = function () {\n\t    return \"[object Promise]\";\n\t};\n\t\n\tPromise.prototype.then = function (fulfilled, rejected, progressed) {\n\t    var self = this;\n\t    var deferred = defer();\n\t    var done = false;   // ensure the untrusted promise makes at most a\n\t                        // single call to one of the callbacks\n\t\n\t    function _fulfilled(value) {\n\t        try {\n\t            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n\t        } catch (exception) {\n\t            return reject(exception);\n\t        }\n\t    }\n\t\n\t    function _rejected(exception) {\n\t        if (typeof rejected === \"function\") {\n\t            makeStackTraceLong(exception, self);\n\t            try {\n\t                return rejected(exception);\n\t            } catch (newException) {\n\t                return reject(newException);\n\t            }\n\t        }\n\t        return reject(exception);\n\t    }\n\t\n\t    function _progressed(value) {\n\t        return typeof progressed === \"function\" ? progressed(value) : value;\n\t    }\n\t\n\t    Q.nextTick(function () {\n\t        self.promiseDispatch(function (value) {\n\t            if (done) {\n\t                return;\n\t            }\n\t            done = true;\n\t\n\t            deferred.resolve(_fulfilled(value));\n\t        }, \"when\", [function (exception) {\n\t            if (done) {\n\t                return;\n\t            }\n\t            done = true;\n\t\n\t            deferred.resolve(_rejected(exception));\n\t        }]);\n\t    });\n\t\n\t    // Progress propagator need to be attached in the current tick.\n\t    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n\t        var newValue;\n\t        var threw = false;\n\t        try {\n\t            newValue = _progressed(value);\n\t        } catch (e) {\n\t            threw = true;\n\t            if (Q.onerror) {\n\t                Q.onerror(e);\n\t            } else {\n\t                throw e;\n\t            }\n\t        }\n\t\n\t        if (!threw) {\n\t            deferred.notify(newValue);\n\t        }\n\t    }]);\n\t\n\t    return deferred.promise;\n\t};\n\t\n\tQ.tap = function (promise, callback) {\n\t    return Q(promise).tap(callback);\n\t};\n\t\n\t/**\n\t * Works almost like \"finally\", but not called for rejections.\n\t * Original resolution value is passed through callback unaffected.\n\t * Callback may return a promise that will be awaited for.\n\t * @param {Function} callback\n\t * @returns {Q.Promise}\n\t * @example\n\t * doSomething()\n\t *   .then(...)\n\t *   .tap(console.log)\n\t *   .then(...);\n\t */\n\tPromise.prototype.tap = function (callback) {\n\t    callback = Q(callback);\n\t\n\t    return this.then(function (value) {\n\t        return callback.fcall(value).thenResolve(value);\n\t    });\n\t};\n\t\n\t/**\n\t * Registers an observer on a promise.\n\t *\n\t * Guarantees:\n\t *\n\t * 1. that fulfilled and rejected will be called only once.\n\t * 2. that either the fulfilled callback or the rejected callback will be\n\t *    called, but not both.\n\t * 3. that fulfilled and rejected will not be called in this turn.\n\t *\n\t * @param value      promise or immediate reference to observe\n\t * @param fulfilled  function to be called with the fulfilled value\n\t * @param rejected   function to be called with the rejection exception\n\t * @param progressed function to be called on any progress notifications\n\t * @return promise for the return value from the invoked callback\n\t */\n\tQ.when = when;\n\tfunction when(value, fulfilled, rejected, progressed) {\n\t    return Q(value).then(fulfilled, rejected, progressed);\n\t}\n\t\n\tPromise.prototype.thenResolve = function (value) {\n\t    return this.then(function () { return value; });\n\t};\n\t\n\tQ.thenResolve = function (promise, value) {\n\t    return Q(promise).thenResolve(value);\n\t};\n\t\n\tPromise.prototype.thenReject = function (reason) {\n\t    return this.then(function () { throw reason; });\n\t};\n\t\n\tQ.thenReject = function (promise, reason) {\n\t    return Q(promise).thenReject(reason);\n\t};\n\t\n\t/**\n\t * If an object is not a promise, it is as \"near\" as possible.\n\t * If a promise is rejected, it is as \"near\" as possible too.\n\t * If it’s a fulfilled promise, the fulfillment value is nearer.\n\t * If it’s a deferred promise and the deferred has been resolved, the\n\t * resolution is \"nearer\".\n\t * @param object\n\t * @returns most resolved (nearest) form of the object\n\t */\n\t\n\t// XXX should we re-do this?\n\tQ.nearer = nearer;\n\tfunction nearer(value) {\n\t    if (isPromise(value)) {\n\t        var inspected = value.inspect();\n\t        if (inspected.state === \"fulfilled\") {\n\t            return inspected.value;\n\t        }\n\t    }\n\t    return value;\n\t}\n\t\n\t/**\n\t * @returns whether the given object is a promise.\n\t * Otherwise it is a fulfilled value.\n\t */\n\tQ.isPromise = isPromise;\n\tfunction isPromise(object) {\n\t    return object instanceof Promise;\n\t}\n\t\n\tQ.isPromiseAlike = isPromiseAlike;\n\tfunction isPromiseAlike(object) {\n\t    return isObject(object) && typeof object.then === \"function\";\n\t}\n\t\n\t/**\n\t * @returns whether the given object is a pending promise, meaning not\n\t * fulfilled or rejected.\n\t */\n\tQ.isPending = isPending;\n\tfunction isPending(object) {\n\t    return isPromise(object) && object.inspect().state === \"pending\";\n\t}\n\t\n\tPromise.prototype.isPending = function () {\n\t    return this.inspect().state === \"pending\";\n\t};\n\t\n\t/**\n\t * @returns whether the given object is a value or fulfilled\n\t * promise.\n\t */\n\tQ.isFulfilled = isFulfilled;\n\tfunction isFulfilled(object) {\n\t    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n\t}\n\t\n\tPromise.prototype.isFulfilled = function () {\n\t    return this.inspect().state === \"fulfilled\";\n\t};\n\t\n\t/**\n\t * @returns whether the given object is a rejected promise.\n\t */\n\tQ.isRejected = isRejected;\n\tfunction isRejected(object) {\n\t    return isPromise(object) && object.inspect().state === \"rejected\";\n\t}\n\t\n\tPromise.prototype.isRejected = function () {\n\t    return this.inspect().state === \"rejected\";\n\t};\n\t\n\t//// BEGIN UNHANDLED REJECTION TRACKING\n\t\n\t// This promise library consumes exceptions thrown in handlers so they can be\n\t// handled by a subsequent promise.  The exceptions get added to this array when\n\t// they are created, and removed when they are handled.  Note that in ES6 or\n\t// shimmed environments, this would naturally be a `Set`.\n\tvar unhandledReasons = [];\n\tvar unhandledRejections = [];\n\tvar reportedUnhandledRejections = [];\n\tvar trackUnhandledRejections = true;\n\t\n\tfunction resetUnhandledRejections() {\n\t    unhandledReasons.length = 0;\n\t    unhandledRejections.length = 0;\n\t\n\t    if (!trackUnhandledRejections) {\n\t        trackUnhandledRejections = true;\n\t    }\n\t}\n\t\n\tfunction trackRejection(promise, reason) {\n\t    if (!trackUnhandledRejections) {\n\t        return;\n\t    }\n\t    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n\t        Q.nextTick.runAfter(function () {\n\t            if (array_indexOf(unhandledRejections, promise) !== -1) {\n\t                process.emit(\"unhandledRejection\", reason, promise);\n\t                reportedUnhandledRejections.push(promise);\n\t            }\n\t        });\n\t    }\n\t\n\t    unhandledRejections.push(promise);\n\t    if (reason && typeof reason.stack !== \"undefined\") {\n\t        unhandledReasons.push(reason.stack);\n\t    } else {\n\t        unhandledReasons.push(\"(no stack) \" + reason);\n\t    }\n\t}\n\t\n\tfunction untrackRejection(promise) {\n\t    if (!trackUnhandledRejections) {\n\t        return;\n\t    }\n\t\n\t    var at = array_indexOf(unhandledRejections, promise);\n\t    if (at !== -1) {\n\t        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n\t            Q.nextTick.runAfter(function () {\n\t                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n\t                if (atReport !== -1) {\n\t                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n\t                    reportedUnhandledRejections.splice(atReport, 1);\n\t                }\n\t            });\n\t        }\n\t        unhandledRejections.splice(at, 1);\n\t        unhandledReasons.splice(at, 1);\n\t    }\n\t}\n\t\n\tQ.resetUnhandledRejections = resetUnhandledRejections;\n\t\n\tQ.getUnhandledReasons = function () {\n\t    // Make a copy so that consumers can't interfere with our internal state.\n\t    return unhandledReasons.slice();\n\t};\n\t\n\tQ.stopUnhandledRejectionTracking = function () {\n\t    resetUnhandledRejections();\n\t    trackUnhandledRejections = false;\n\t};\n\t\n\tresetUnhandledRejections();\n\t\n\t//// END UNHANDLED REJECTION TRACKING\n\t\n\t/**\n\t * Constructs a rejected promise.\n\t * @param reason value describing the failure\n\t */\n\tQ.reject = reject;\n\tfunction reject(reason) {\n\t    var rejection = Promise({\n\t        \"when\": function (rejected) {\n\t            // note that the error has been handled\n\t            if (rejected) {\n\t                untrackRejection(this);\n\t            }\n\t            return rejected ? rejected(reason) : this;\n\t        }\n\t    }, function fallback() {\n\t        return this;\n\t    }, function inspect() {\n\t        return { state: \"rejected\", reason: reason };\n\t    });\n\t\n\t    // Note that the reason has not been handled.\n\t    trackRejection(rejection, reason);\n\t\n\t    return rejection;\n\t}\n\t\n\t/**\n\t * Constructs a fulfilled promise for an immediate reference.\n\t * @param value immediate reference\n\t */\n\tQ.fulfill = fulfill;\n\tfunction fulfill(value) {\n\t    return Promise({\n\t        \"when\": function () {\n\t            return value;\n\t        },\n\t        \"get\": function (name) {\n\t            return value[name];\n\t        },\n\t        \"set\": function (name, rhs) {\n\t            value[name] = rhs;\n\t        },\n\t        \"delete\": function (name) {\n\t            delete value[name];\n\t        },\n\t        \"post\": function (name, args) {\n\t            // Mark Miller proposes that post with no name should apply a\n\t            // promised function.\n\t            if (name === null || name === void 0) {\n\t                return value.apply(void 0, args);\n\t            } else {\n\t                return value[name].apply(value, args);\n\t            }\n\t        },\n\t        \"apply\": function (thisp, args) {\n\t            return value.apply(thisp, args);\n\t        },\n\t        \"keys\": function () {\n\t            return object_keys(value);\n\t        }\n\t    }, void 0, function inspect() {\n\t        return { state: \"fulfilled\", value: value };\n\t    });\n\t}\n\t\n\t/**\n\t * Converts thenables to Q promises.\n\t * @param promise thenable promise\n\t * @returns a Q promise\n\t */\n\tfunction coerce(promise) {\n\t    var deferred = defer();\n\t    Q.nextTick(function () {\n\t        try {\n\t            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n\t        } catch (exception) {\n\t            deferred.reject(exception);\n\t        }\n\t    });\n\t    return deferred.promise;\n\t}\n\t\n\t/**\n\t * Annotates an object such that it will never be\n\t * transferred away from this process over any promise\n\t * communication channel.\n\t * @param object\n\t * @returns promise a wrapping of that object that\n\t * additionally responds to the \"isDef\" message\n\t * without a rejection.\n\t */\n\tQ.master = master;\n\tfunction master(object) {\n\t    return Promise({\n\t        \"isDef\": function () {}\n\t    }, function fallback(op, args) {\n\t        return dispatch(object, op, args);\n\t    }, function () {\n\t        return Q(object).inspect();\n\t    });\n\t}\n\t\n\t/**\n\t * Spreads the values of a promised array of arguments into the\n\t * fulfillment callback.\n\t * @param fulfilled callback that receives variadic arguments from the\n\t * promised array\n\t * @param rejected callback that receives the exception if the promise\n\t * is rejected.\n\t * @returns a promise for the return value or thrown exception of\n\t * either callback.\n\t */\n\tQ.spread = spread;\n\tfunction spread(value, fulfilled, rejected) {\n\t    return Q(value).spread(fulfilled, rejected);\n\t}\n\t\n\tPromise.prototype.spread = function (fulfilled, rejected) {\n\t    return this.all().then(function (array) {\n\t        return fulfilled.apply(void 0, array);\n\t    }, rejected);\n\t};\n\t\n\t/**\n\t * The async function is a decorator for generator functions, turning\n\t * them into asynchronous generators.  Although generators are only part\n\t * of the newest ECMAScript 6 drafts, this code does not cause syntax\n\t * errors in older engines.  This code should continue to work and will\n\t * in fact improve over time as the language improves.\n\t *\n\t * ES6 generators are currently part of V8 version 3.19 with the\n\t * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n\t * for longer, but under an older Python-inspired form.  This function\n\t * works on both kinds of generators.\n\t *\n\t * Decorates a generator function such that:\n\t *  - it may yield promises\n\t *  - execution will continue when that promise is fulfilled\n\t *  - the value of the yield expression will be the fulfilled value\n\t *  - it returns a promise for the return value (when the generator\n\t *    stops iterating)\n\t *  - the decorated function returns a promise for the return value\n\t *    of the generator or the first rejected promise among those\n\t *    yielded.\n\t *  - if an error is thrown in the generator, it propagates through\n\t *    every following yield until it is caught, or until it escapes\n\t *    the generator function altogether, and is translated into a\n\t *    rejection for the promise returned by the decorated generator.\n\t */\n\tQ.async = async;\n\tfunction async(makeGenerator) {\n\t    return function () {\n\t        // when verb is \"send\", arg is a value\n\t        // when verb is \"throw\", arg is an exception\n\t        function continuer(verb, arg) {\n\t            var result;\n\t\n\t            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n\t            // engine that has a deployed base of browsers that support generators.\n\t            // However, SM's generators use the Python-inspired semantics of\n\t            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n\t            // like to make it possible to use generators in deployed browsers, so\n\t            // we also support Python-style generators.  At some point we can remove\n\t            // this block.\n\t\n\t            if (typeof StopIteration === \"undefined\") {\n\t                // ES6 Generators\n\t                try {\n\t                    result = generator[verb](arg);\n\t                } catch (exception) {\n\t                    return reject(exception);\n\t                }\n\t                if (result.done) {\n\t                    return Q(result.value);\n\t                } else {\n\t                    return when(result.value, callback, errback);\n\t                }\n\t            } else {\n\t                // SpiderMonkey Generators\n\t                // FIXME: Remove this case when SM does ES6 generators.\n\t                try {\n\t                    result = generator[verb](arg);\n\t                } catch (exception) {\n\t                    if (isStopIteration(exception)) {\n\t                        return Q(exception.value);\n\t                    } else {\n\t                        return reject(exception);\n\t                    }\n\t                }\n\t                return when(result, callback, errback);\n\t            }\n\t        }\n\t        var generator = makeGenerator.apply(this, arguments);\n\t        var callback = continuer.bind(continuer, \"next\");\n\t        var errback = continuer.bind(continuer, \"throw\");\n\t        return callback();\n\t    };\n\t}\n\t\n\t/**\n\t * The spawn function is a small wrapper around async that immediately\n\t * calls the generator and also ends the promise chain, so that any\n\t * unhandled errors are thrown instead of forwarded to the error\n\t * handler. This is useful because it's extremely common to run\n\t * generators at the top-level to work with libraries.\n\t */\n\tQ.spawn = spawn;\n\tfunction spawn(makeGenerator) {\n\t    Q.done(Q.async(makeGenerator)());\n\t}\n\t\n\t// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n\t/**\n\t * Throws a ReturnValue exception to stop an asynchronous generator.\n\t *\n\t * This interface is a stop-gap measure to support generator return\n\t * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n\t * generators like Chromium 29, just use \"return\" in your generator\n\t * functions.\n\t *\n\t * @param value the return value for the surrounding generator\n\t * @throws ReturnValue exception with the value.\n\t * @example\n\t * // ES6 style\n\t * Q.async(function* () {\n\t *      var foo = yield getFooPromise();\n\t *      var bar = yield getBarPromise();\n\t *      return foo + bar;\n\t * })\n\t * // Older SpiderMonkey style\n\t * Q.async(function () {\n\t *      var foo = yield getFooPromise();\n\t *      var bar = yield getBarPromise();\n\t *      Q.return(foo + bar);\n\t * })\n\t */\n\tQ[\"return\"] = _return;\n\tfunction _return(value) {\n\t    throw new QReturnValue(value);\n\t}\n\t\n\t/**\n\t * The promised function decorator ensures that any promise arguments\n\t * are settled and passed as values (`this` is also settled and passed\n\t * as a value).  It will also ensure that the result of a function is\n\t * always a promise.\n\t *\n\t * @example\n\t * var add = Q.promised(function (a, b) {\n\t *     return a + b;\n\t * });\n\t * add(Q(a), Q(B));\n\t *\n\t * @param {function} callback The function to decorate\n\t * @returns {function} a function that has been decorated.\n\t */\n\tQ.promised = promised;\n\tfunction promised(callback) {\n\t    return function () {\n\t        return spread([this, all(arguments)], function (self, args) {\n\t            return callback.apply(self, args);\n\t        });\n\t    };\n\t}\n\t\n\t/**\n\t * sends a message to a value in a future turn\n\t * @param object* the recipient\n\t * @param op the name of the message operation, e.g., \"when\",\n\t * @param args further arguments to be forwarded to the operation\n\t * @returns result {Promise} a promise for the result of the operation\n\t */\n\tQ.dispatch = dispatch;\n\tfunction dispatch(object, op, args) {\n\t    return Q(object).dispatch(op, args);\n\t}\n\t\n\tPromise.prototype.dispatch = function (op, args) {\n\t    var self = this;\n\t    var deferred = defer();\n\t    Q.nextTick(function () {\n\t        self.promiseDispatch(deferred.resolve, op, args);\n\t    });\n\t    return deferred.promise;\n\t};\n\t\n\t/**\n\t * Gets the value of a property in a future turn.\n\t * @param object    promise or immediate reference for target object\n\t * @param name      name of property to get\n\t * @return promise for the property value\n\t */\n\tQ.get = function (object, key) {\n\t    return Q(object).dispatch(\"get\", [key]);\n\t};\n\t\n\tPromise.prototype.get = function (key) {\n\t    return this.dispatch(\"get\", [key]);\n\t};\n\t\n\t/**\n\t * Sets the value of a property in a future turn.\n\t * @param object    promise or immediate reference for object object\n\t * @param name      name of property to set\n\t * @param value     new value of property\n\t * @return promise for the return value\n\t */\n\tQ.set = function (object, key, value) {\n\t    return Q(object).dispatch(\"set\", [key, value]);\n\t};\n\t\n\tPromise.prototype.set = function (key, value) {\n\t    return this.dispatch(\"set\", [key, value]);\n\t};\n\t\n\t/**\n\t * Deletes a property in a future turn.\n\t * @param object    promise or immediate reference for target object\n\t * @param name      name of property to delete\n\t * @return promise for the return value\n\t */\n\tQ.del = // XXX legacy\n\tQ[\"delete\"] = function (object, key) {\n\t    return Q(object).dispatch(\"delete\", [key]);\n\t};\n\t\n\tPromise.prototype.del = // XXX legacy\n\tPromise.prototype[\"delete\"] = function (key) {\n\t    return this.dispatch(\"delete\", [key]);\n\t};\n\t\n\t/**\n\t * Invokes a method in a future turn.\n\t * @param object    promise or immediate reference for target object\n\t * @param name      name of method to invoke\n\t * @param value     a value to post, typically an array of\n\t *                  invocation arguments for promises that\n\t *                  are ultimately backed with `resolve` values,\n\t *                  as opposed to those backed with URLs\n\t *                  wherein the posted value can be any\n\t *                  JSON serializable object.\n\t * @return promise for the return value\n\t */\n\t// bound locally because it is used by other methods\n\tQ.mapply = // XXX As proposed by \"Redsandro\"\n\tQ.post = function (object, name, args) {\n\t    return Q(object).dispatch(\"post\", [name, args]);\n\t};\n\t\n\tPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\n\tPromise.prototype.post = function (name, args) {\n\t    return this.dispatch(\"post\", [name, args]);\n\t};\n\t\n\t/**\n\t * Invokes a method in a future turn.\n\t * @param object    promise or immediate reference for target object\n\t * @param name      name of method to invoke\n\t * @param ...args   array of invocation arguments\n\t * @return promise for the return value\n\t */\n\tQ.send = // XXX Mark Miller's proposed parlance\n\tQ.mcall = // XXX As proposed by \"Redsandro\"\n\tQ.invoke = function (object, name /*...args*/) {\n\t    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n\t};\n\t\n\tPromise.prototype.send = // XXX Mark Miller's proposed parlance\n\tPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\n\tPromise.prototype.invoke = function (name /*...args*/) {\n\t    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n\t};\n\t\n\t/**\n\t * Applies the promised function in a future turn.\n\t * @param object    promise or immediate reference for target function\n\t * @param args      array of application arguments\n\t */\n\tQ.fapply = function (object, args) {\n\t    return Q(object).dispatch(\"apply\", [void 0, args]);\n\t};\n\t\n\tPromise.prototype.fapply = function (args) {\n\t    return this.dispatch(\"apply\", [void 0, args]);\n\t};\n\t\n\t/**\n\t * Calls the promised function in a future turn.\n\t * @param object    promise or immediate reference for target function\n\t * @param ...args   array of application arguments\n\t */\n\tQ[\"try\"] =\n\tQ.fcall = function (object /* ...args*/) {\n\t    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n\t};\n\t\n\tPromise.prototype.fcall = function (/*...args*/) {\n\t    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n\t};\n\t\n\t/**\n\t * Binds the promised function, transforming return values into a fulfilled\n\t * promise and thrown errors into a rejected one.\n\t * @param object    promise or immediate reference for target function\n\t * @param ...args   array of application arguments\n\t */\n\tQ.fbind = function (object /*...args*/) {\n\t    var promise = Q(object);\n\t    var args = array_slice(arguments, 1);\n\t    return function fbound() {\n\t        return promise.dispatch(\"apply\", [\n\t            this,\n\t            args.concat(array_slice(arguments))\n\t        ]);\n\t    };\n\t};\n\tPromise.prototype.fbind = function (/*...args*/) {\n\t    var promise = this;\n\t    var args = array_slice(arguments);\n\t    return function fbound() {\n\t        return promise.dispatch(\"apply\", [\n\t            this,\n\t            args.concat(array_slice(arguments))\n\t        ]);\n\t    };\n\t};\n\t\n\t/**\n\t * Requests the names of the owned properties of a promised\n\t * object in a future turn.\n\t * @param object    promise or immediate reference for target object\n\t * @return promise for the keys of the eventually settled object\n\t */\n\tQ.keys = function (object) {\n\t    return Q(object).dispatch(\"keys\", []);\n\t};\n\t\n\tPromise.prototype.keys = function () {\n\t    return this.dispatch(\"keys\", []);\n\t};\n\t\n\t/**\n\t * Turns an array of promises into a promise for an array.  If any of\n\t * the promises gets rejected, the whole array is rejected immediately.\n\t * @param {Array*} an array (or promise for an array) of values (or\n\t * promises for values)\n\t * @returns a promise for an array of the corresponding values\n\t */\n\t// By Mark Miller\n\t// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\n\tQ.all = all;\n\tfunction all(promises) {\n\t    return when(promises, function (promises) {\n\t        var pendingCount = 0;\n\t        var deferred = defer();\n\t        array_reduce(promises, function (undefined, promise, index) {\n\t            var snapshot;\n\t            if (\n\t                isPromise(promise) &&\n\t                (snapshot = promise.inspect()).state === \"fulfilled\"\n\t            ) {\n\t                promises[index] = snapshot.value;\n\t            } else {\n\t                ++pendingCount;\n\t                when(\n\t                    promise,\n\t                    function (value) {\n\t                        promises[index] = value;\n\t                        if (--pendingCount === 0) {\n\t                            deferred.resolve(promises);\n\t                        }\n\t                    },\n\t                    deferred.reject,\n\t                    function (progress) {\n\t                        deferred.notify({ index: index, value: progress });\n\t                    }\n\t                );\n\t            }\n\t        }, void 0);\n\t        if (pendingCount === 0) {\n\t            deferred.resolve(promises);\n\t        }\n\t        return deferred.promise;\n\t    });\n\t}\n\t\n\tPromise.prototype.all = function () {\n\t    return all(this);\n\t};\n\t\n\t/**\n\t * Returns the first resolved promise of an array. Prior rejected promises are\n\t * ignored.  Rejects only if all promises are rejected.\n\t * @param {Array*} an array containing values or promises for values\n\t * @returns a promise fulfilled with the value of the first resolved promise,\n\t * or a rejected promise if all promises are rejected.\n\t */\n\tQ.any = any;\n\t\n\tfunction any(promises) {\n\t    if (promises.length === 0) {\n\t        return Q.resolve();\n\t    }\n\t\n\t    var deferred = Q.defer();\n\t    var pendingCount = 0;\n\t    array_reduce(promises, function (prev, current, index) {\n\t        var promise = promises[index];\n\t\n\t        pendingCount++;\n\t\n\t        when(promise, onFulfilled, onRejected, onProgress);\n\t        function onFulfilled(result) {\n\t            deferred.resolve(result);\n\t        }\n\t        function onRejected() {\n\t            pendingCount--;\n\t            if (pendingCount === 0) {\n\t                deferred.reject(new Error(\n\t                    \"Can't get fulfillment value from any promise, all \" +\n\t                    \"promises were rejected.\"\n\t                ));\n\t            }\n\t        }\n\t        function onProgress(progress) {\n\t            deferred.notify({\n\t                index: index,\n\t                value: progress\n\t            });\n\t        }\n\t    }, undefined);\n\t\n\t    return deferred.promise;\n\t}\n\t\n\tPromise.prototype.any = function () {\n\t    return any(this);\n\t};\n\t\n\t/**\n\t * Waits for all promises to be settled, either fulfilled or\n\t * rejected.  This is distinct from `all` since that would stop\n\t * waiting at the first rejection.  The promise returned by\n\t * `allResolved` will never be rejected.\n\t * @param promises a promise for an array (or an array) of promises\n\t * (or values)\n\t * @return a promise for an array of promises\n\t */\n\tQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\n\tfunction allResolved(promises) {\n\t    return when(promises, function (promises) {\n\t        promises = array_map(promises, Q);\n\t        return when(all(array_map(promises, function (promise) {\n\t            return when(promise, noop, noop);\n\t        })), function () {\n\t            return promises;\n\t        });\n\t    });\n\t}\n\t\n\tPromise.prototype.allResolved = function () {\n\t    return allResolved(this);\n\t};\n\t\n\t/**\n\t * @see Promise#allSettled\n\t */\n\tQ.allSettled = allSettled;\n\tfunction allSettled(promises) {\n\t    return Q(promises).allSettled();\n\t}\n\t\n\t/**\n\t * Turns an array of promises into a promise for an array of their states (as\n\t * returned by `inspect`) when they have all settled.\n\t * @param {Array[Any*]} values an array (or promise for an array) of values (or\n\t * promises for values)\n\t * @returns {Array[State]} an array of states for the respective values.\n\t */\n\tPromise.prototype.allSettled = function () {\n\t    return this.then(function (promises) {\n\t        return all(array_map(promises, function (promise) {\n\t            promise = Q(promise);\n\t            function regardless() {\n\t                return promise.inspect();\n\t            }\n\t            return promise.then(regardless, regardless);\n\t        }));\n\t    });\n\t};\n\t\n\t/**\n\t * Captures the failure of a promise, giving an oportunity to recover\n\t * with a callback.  If the given promise is fulfilled, the returned\n\t * promise is fulfilled.\n\t * @param {Any*} promise for something\n\t * @param {Function} callback to fulfill the returned promise if the\n\t * given promise is rejected\n\t * @returns a promise for the return value of the callback\n\t */\n\tQ.fail = // XXX legacy\n\tQ[\"catch\"] = function (object, rejected) {\n\t    return Q(object).then(void 0, rejected);\n\t};\n\t\n\tPromise.prototype.fail = // XXX legacy\n\tPromise.prototype[\"catch\"] = function (rejected) {\n\t    return this.then(void 0, rejected);\n\t};\n\t\n\t/**\n\t * Attaches a listener that can respond to progress notifications from a\n\t * promise's originating deferred. This listener receives the exact arguments\n\t * passed to ``deferred.notify``.\n\t * @param {Any*} promise for something\n\t * @param {Function} callback to receive any progress notifications\n\t * @returns the given promise, unchanged\n\t */\n\tQ.progress = progress;\n\tfunction progress(object, progressed) {\n\t    return Q(object).then(void 0, void 0, progressed);\n\t}\n\t\n\tPromise.prototype.progress = function (progressed) {\n\t    return this.then(void 0, void 0, progressed);\n\t};\n\t\n\t/**\n\t * Provides an opportunity to observe the settling of a promise,\n\t * regardless of whether the promise is fulfilled or rejected.  Forwards\n\t * the resolution to the returned promise when the callback is done.\n\t * The callback can return a promise to defer completion.\n\t * @param {Any*} promise\n\t * @param {Function} callback to observe the resolution of the given\n\t * promise, takes no arguments.\n\t * @returns a promise for the resolution of the given promise when\n\t * ``fin`` is done.\n\t */\n\tQ.fin = // XXX legacy\n\tQ[\"finally\"] = function (object, callback) {\n\t    return Q(object)[\"finally\"](callback);\n\t};\n\t\n\tPromise.prototype.fin = // XXX legacy\n\tPromise.prototype[\"finally\"] = function (callback) {\n\t    callback = Q(callback);\n\t    return this.then(function (value) {\n\t        return callback.fcall().then(function () {\n\t            return value;\n\t        });\n\t    }, function (reason) {\n\t        // TODO attempt to recycle the rejection with \"this\".\n\t        return callback.fcall().then(function () {\n\t            throw reason;\n\t        });\n\t    });\n\t};\n\t\n\t/**\n\t * Terminates a chain of promises, forcing rejections to be\n\t * thrown as exceptions.\n\t * @param {Any*} promise at the end of a chain of promises\n\t * @returns nothing\n\t */\n\tQ.done = function (object, fulfilled, rejected, progress) {\n\t    return Q(object).done(fulfilled, rejected, progress);\n\t};\n\t\n\tPromise.prototype.done = function (fulfilled, rejected, progress) {\n\t    var onUnhandledError = function (error) {\n\t        // forward to a future turn so that ``when``\n\t        // does not catch it and turn it into a rejection.\n\t        Q.nextTick(function () {\n\t            makeStackTraceLong(error, promise);\n\t            if (Q.onerror) {\n\t                Q.onerror(error);\n\t            } else {\n\t                throw error;\n\t            }\n\t        });\n\t    };\n\t\n\t    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n\t    var promise = fulfilled || rejected || progress ?\n\t        this.then(fulfilled, rejected, progress) :\n\t        this;\n\t\n\t    if (typeof process === \"object\" && process && process.domain) {\n\t        onUnhandledError = process.domain.bind(onUnhandledError);\n\t    }\n\t\n\t    promise.then(void 0, onUnhandledError);\n\t};\n\t\n\t/**\n\t * Causes a promise to be rejected if it does not get fulfilled before\n\t * some milliseconds time out.\n\t * @param {Any*} promise\n\t * @param {Number} milliseconds timeout\n\t * @param {Any*} custom error message or Error object (optional)\n\t * @returns a promise for the resolution of the given promise if it is\n\t * fulfilled before the timeout, otherwise rejected.\n\t */\n\tQ.timeout = function (object, ms, error) {\n\t    return Q(object).timeout(ms, error);\n\t};\n\t\n\tPromise.prototype.timeout = function (ms, error) {\n\t    var deferred = defer();\n\t    var timeoutId = setTimeout(function () {\n\t        if (!error || \"string\" === typeof error) {\n\t            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n\t            error.code = \"ETIMEDOUT\";\n\t        }\n\t        deferred.reject(error);\n\t    }, ms);\n\t\n\t    this.then(function (value) {\n\t        clearTimeout(timeoutId);\n\t        deferred.resolve(value);\n\t    }, function (exception) {\n\t        clearTimeout(timeoutId);\n\t        deferred.reject(exception);\n\t    }, deferred.notify);\n\t\n\t    return deferred.promise;\n\t};\n\t\n\t/**\n\t * Returns a promise for the given value (or promised value), some\n\t * milliseconds after it resolved. Passes rejections immediately.\n\t * @param {Any*} promise\n\t * @param {Number} milliseconds\n\t * @returns a promise for the resolution of the given promise after milliseconds\n\t * time has elapsed since the resolution of the given promise.\n\t * If the given promise rejects, that is passed immediately.\n\t */\n\tQ.delay = function (object, timeout) {\n\t    if (timeout === void 0) {\n\t        timeout = object;\n\t        object = void 0;\n\t    }\n\t    return Q(object).delay(timeout);\n\t};\n\t\n\tPromise.prototype.delay = function (timeout) {\n\t    return this.then(function (value) {\n\t        var deferred = defer();\n\t        setTimeout(function () {\n\t            deferred.resolve(value);\n\t        }, timeout);\n\t        return deferred.promise;\n\t    });\n\t};\n\t\n\t/**\n\t * Passes a continuation to a Node function, which is called with the given\n\t * arguments provided as an array, and returns a promise.\n\t *\n\t *      Q.nfapply(FS.readFile, [__filename])\n\t *      .then(function (content) {\n\t *      })\n\t *\n\t */\n\tQ.nfapply = function (callback, args) {\n\t    return Q(callback).nfapply(args);\n\t};\n\t\n\tPromise.prototype.nfapply = function (args) {\n\t    var deferred = defer();\n\t    var nodeArgs = array_slice(args);\n\t    nodeArgs.push(deferred.makeNodeResolver());\n\t    this.fapply(nodeArgs).fail(deferred.reject);\n\t    return deferred.promise;\n\t};\n\t\n\t/**\n\t * Passes a continuation to a Node function, which is called with the given\n\t * arguments provided individually, and returns a promise.\n\t * @example\n\t * Q.nfcall(FS.readFile, __filename)\n\t * .then(function (content) {\n\t * })\n\t *\n\t */\n\tQ.nfcall = function (callback /*...args*/) {\n\t    var args = array_slice(arguments, 1);\n\t    return Q(callback).nfapply(args);\n\t};\n\t\n\tPromise.prototype.nfcall = function (/*...args*/) {\n\t    var nodeArgs = array_slice(arguments);\n\t    var deferred = defer();\n\t    nodeArgs.push(deferred.makeNodeResolver());\n\t    this.fapply(nodeArgs).fail(deferred.reject);\n\t    return deferred.promise;\n\t};\n\t\n\t/**\n\t * Wraps a NodeJS continuation passing function and returns an equivalent\n\t * version that returns a promise.\n\t * @example\n\t * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n\t * .then(console.log)\n\t * .done()\n\t */\n\tQ.nfbind =\n\tQ.denodeify = function (callback /*...args*/) {\n\t    var baseArgs = array_slice(arguments, 1);\n\t    return function () {\n\t        var nodeArgs = baseArgs.concat(array_slice(arguments));\n\t        var deferred = defer();\n\t        nodeArgs.push(deferred.makeNodeResolver());\n\t        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n\t        return deferred.promise;\n\t    };\n\t};\n\t\n\tPromise.prototype.nfbind =\n\tPromise.prototype.denodeify = function (/*...args*/) {\n\t    var args = array_slice(arguments);\n\t    args.unshift(this);\n\t    return Q.denodeify.apply(void 0, args);\n\t};\n\t\n\tQ.nbind = function (callback, thisp /*...args*/) {\n\t    var baseArgs = array_slice(arguments, 2);\n\t    return function () {\n\t        var nodeArgs = baseArgs.concat(array_slice(arguments));\n\t        var deferred = defer();\n\t        nodeArgs.push(deferred.makeNodeResolver());\n\t        function bound() {\n\t            return callback.apply(thisp, arguments);\n\t        }\n\t        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n\t        return deferred.promise;\n\t    };\n\t};\n\t\n\tPromise.prototype.nbind = function (/*thisp, ...args*/) {\n\t    var args = array_slice(arguments, 0);\n\t    args.unshift(this);\n\t    return Q.nbind.apply(void 0, args);\n\t};\n\t\n\t/**\n\t * Calls a method of a Node-style object that accepts a Node-style\n\t * callback with a given array of arguments, plus a provided callback.\n\t * @param object an object that has the named method\n\t * @param {String} name name of the method of object\n\t * @param {Array} args arguments to pass to the method; the callback\n\t * will be provided by Q and appended to these arguments.\n\t * @returns a promise for the value or error\n\t */\n\tQ.nmapply = // XXX As proposed by \"Redsandro\"\n\tQ.npost = function (object, name, args) {\n\t    return Q(object).npost(name, args);\n\t};\n\t\n\tPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\n\tPromise.prototype.npost = function (name, args) {\n\t    var nodeArgs = array_slice(args || []);\n\t    var deferred = defer();\n\t    nodeArgs.push(deferred.makeNodeResolver());\n\t    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n\t    return deferred.promise;\n\t};\n\t\n\t/**\n\t * Calls a method of a Node-style object that accepts a Node-style\n\t * callback, forwarding the given variadic arguments, plus a provided\n\t * callback argument.\n\t * @param object an object that has the named method\n\t * @param {String} name name of the method of object\n\t * @param ...args arguments to pass to the method; the callback will\n\t * be provided by Q and appended to these arguments.\n\t * @returns a promise for the value or error\n\t */\n\tQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\n\tQ.nmcall = // XXX Based on \"Redsandro's\" proposal\n\tQ.ninvoke = function (object, name /*...args*/) {\n\t    var nodeArgs = array_slice(arguments, 2);\n\t    var deferred = defer();\n\t    nodeArgs.push(deferred.makeNodeResolver());\n\t    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n\t    return deferred.promise;\n\t};\n\t\n\tPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\n\tPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\n\tPromise.prototype.ninvoke = function (name /*...args*/) {\n\t    var nodeArgs = array_slice(arguments, 1);\n\t    var deferred = defer();\n\t    nodeArgs.push(deferred.makeNodeResolver());\n\t    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n\t    return deferred.promise;\n\t};\n\t\n\t/**\n\t * If a function would like to support both Node continuation-passing-style and\n\t * promise-returning-style, it can end its internal promise chain with\n\t * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n\t * elects to use a nodeback, the result will be sent there.  If they do not\n\t * pass a nodeback, they will receive the result promise.\n\t * @param object a result (or a promise for a result)\n\t * @param {Function} nodeback a Node.js-style callback\n\t * @returns either the promise or nothing\n\t */\n\tQ.nodeify = nodeify;\n\tfunction nodeify(object, nodeback) {\n\t    return Q(object).nodeify(nodeback);\n\t}\n\t\n\tPromise.prototype.nodeify = function (nodeback) {\n\t    if (nodeback) {\n\t        this.then(function (value) {\n\t            Q.nextTick(function () {\n\t                nodeback(null, value);\n\t            });\n\t        }, function (error) {\n\t            Q.nextTick(function () {\n\t                nodeback(error);\n\t            });\n\t        });\n\t    } else {\n\t        return this;\n\t    }\n\t};\n\t\n\tQ.noConflict = function() {\n\t    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n\t};\n\t\n\t// All code before this point will be filtered from stack traces.\n\tvar qEndingLine = captureLine();\n\t\n\treturn Q;\n\t\n\t});\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(26), __webpack_require__(27).setImmediate))\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(26).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27).setImmediate, __webpack_require__(27).clearImmediate))\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n\t * This class provides utility methods.\r\n\t */\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(25), __webpack_require__(29)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Q, $script) {\r\n\t    \"use strict\";\r\n\t\r\n\t    module.exports.loadLibrary = function(scriptUrl) {\r\n\t        var deferred = Q.defer();\r\n\t        $script(scriptUrl, function() {\r\n\t            deferred.resolve();\r\n\t        }, function() {\r\n\t            // use JSON.stringify here because scriptUrl may be a string or an array of string.\r\n\t            deferred.reject('error loading:' + JSON.stringify(scriptUrl));\r\n\t        });\r\n\t        return deferred.promise;\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){\"use strict\";function n(n,t){for(var e=0,o=n.length;o>e;++e)if(!t(n[e]))return s;return 1}function t(t,e){n(t,function(n){return!e(n)})}function e(i,u,s,h){function g(n){return n.call?n():a[n]}function m(){if(!--j){a[E]=1,y&&y();for(var e in f)n(e.split(\"|\"),g)&&!t(f[e],g)&&(f[e]=[])}}i=i[v]?i:[i];var p=u&&u.call,y=p?u:s,E=p?i.join(\"\"):u,j=i.length,L=p?s:h;return setTimeout(function(){t(i,function(n){return null===n?m():d[n]?(E&&(l[E]=1),2==d[n]&&m()):(d[n]=1,E&&(l[E]=1),void o(!c.test(n)&&r?r+n+\".js\":n,m,E,L))})},0),e}function o(n,t,o,r){var c=i.createElement(\"script\"),a=s;c.onerror=function(){c.onload=c.onerror=c[p]=null,r&&e.ready(o,t,r)},c.onload=c[p]=function(){return\"loaded\"===c[g]&&null===c.nextSibling?void(r&&e.ready(o,t,r)):void(c[g]&&!/^c|loade/.test(c[g])||a||(c.onload=c.onerror=c[p]=null,a=1,d[n]=2,t()))},c.async=1,c.src=n,u.insertBefore(c,u.firstChild)}var r,i=document,u=i.getElementsByTagName(\"head\")[0],c=/^https?:\\/\\//,a={},l={},f={},d={},s=!1,v=\"push\",h=\"DOMContentLoaded\",g=\"readyState\",m=\"addEventListener\",p=\"onreadystatechange\";!i[g]&&i[m]&&(i[m](h,function y(){i.removeEventListener(h,y,s),i[g]=\"complete\"},s),i[g]=\"loading\"),e.get=o,e.order=function(n,t,o){!function r(i){i=n.shift(),n.length?e(i,r):e(i,t,o)}()},e.path=function(n){r=n},e.ready=function(o,r,i){o=o[v]?o:[o];var u=[];return!t(o,function(n){a[n]||u[v](n)})&&n(o,function(n){return a[n]})?r():!function(n){f[n]=f[n]||[],f[n][v](r),i&&i(u)}(o.join(\"|\")),e},e.done=function(n){e([null],n)},module.exports=e}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($) {!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    \"use strict\";\r\n\t\r\n\t    var deferreds = {\r\n\t        \"comment-init\": $.Deferred(),\r\n\t        \"sidenote-init\": $.Deferred()\r\n\t    };\r\n\t\r\n\t    module.exports.attach = function (type, handler, errorHandler) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.promise().then(handler, errorHandler);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.exports.getPromise = function (type) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            return defer.promise();\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t\r\n\t    module.exports.resolve = function (type, valueObject) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.resolve(valueObject);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.exports.reject = function (type, valueObject) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.reject(valueObject);\r\n\t        }\r\n\t    };\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {/* Sample:\r\n\t    Experiment.IsEnabledAsync('experiment_name').done(function(fEnabled){\r\n\t        if (fEnabled) {\r\n\t            // do something, in case the experiment is ON for this specific session\r\n\t        } else {\r\n\t            // do something else, in case the experiment is OFF for this specific session\r\n\t        }\r\n\t    });\r\n\t*/\r\n\t\r\n\t// jshint ignore:start\r\n\twindow.Experiment = new(function(){\r\n\t    var root = (function(){return this;}).call(null);\r\n\t    var _ = this;\r\n\t\r\n\t    var m_objConfigurationPromise = (function() {\r\n\t        var retval = root.NinjaMode ? $.Deferred().resolve({}) : $.ajax({url: '/_chrome/experiment.json'});\r\n\t        retval.then(function(configuration) {\r\n\t            _.m_objConfiguration = configuration;\r\n\t        }, function() {\r\n\t            _.m_objConfiguration = null;\r\n\t        });\r\n\t        return retval;\r\n\t    })();\r\n\t\r\n\t    _.GenerateGuid = function() {\r\n\t        var timestamp = (new Date).getTime();\r\n\t        var result = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n\t            var r = (timestamp + Math.random() * 16) % 16 | 0;\r\n\t            timestamp = Math.floor(timestamp / 16);\r\n\t            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n\t        });\r\n\t        return result.toUpperCase();\r\n\t    };\r\n\t\r\n\t    _.GetCookie = function(name) {\r\n\t        var cookies = root.document.cookie ? root.document.cookie.split('; ') : [];\r\n\t        for (var i = 0; i < cookies.length; i++) {\r\n\t            var pos = cookies[i].indexOf('=');\r\n\t            if (name === root.decodeURIComponent(cookies[i].slice(0, pos)))\r\n\t            {\r\n\t                var cookie = cookies[i].slice(pos + 1).replace(/\\+/g, ' ');\r\n\t                cookie = root.decodeURIComponent(cookie);\r\n\t                return cookie;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    _.GetHashCode = function(input) {\r\n\t        var result = 0;\r\n\t        if (input) {\r\n\t            for (var i = 0; i < input.length; i++) {\r\n\t                var c = input.charCodeAt(i);\r\n\t                result = ((result << 5) - result) + c;\r\n\t                result = result & result;\r\n\t            }\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    _.GetConfigurationAsync = function() {\r\n\t        if (_.m_objConfiguration) {\r\n\t            return $.Deferred().resolve(_.m_objConfiguration);\r\n\t        }\r\n\t        return m_objConfigurationPromise;\r\n\t    };\r\n\t\r\n\t    _.GetCustomSettings = function() {\r\n\t        var result = _.GetCookie('EXP');\r\n\t        result = result && _.JsonDeserialize(result);\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    _.IsEnabled = function(experimentName, configuration) {\r\n\t        try {\r\n\t            var customSettings = _.GetCustomSettings();\r\n\t            if (customSettings && customSettings.hasOwnProperty(experimentName)) {\r\n\t                return Boolean(customSettings[experimentName]);\r\n\t            }\r\n\t            if (!configuration) {\r\n\t                return false;\r\n\t            }\r\n\t            var experimentSetting = configuration[experimentName];\r\n\t            if (experimentSetting) {\r\n\t                if (experimentSetting.hasOwnProperty('enabled') && !experimentSetting['enabled']) {\r\n\t                    return false;\r\n\t                }\r\n\t                var experimentRatio = experimentSetting['ratio'];\r\n\t                if (experimentRatio <= 0)\r\n\t                {\r\n\t                    return false;\r\n\t                }\r\n\t                if (experimentRatio >= 100)\r\n\t                {\r\n\t                    return true;\r\n\t                }\r\n\t                var sessionId = _.GetCookie('SID');\r\n\t                if (!sessionId) {\r\n\t                    return false;\r\n\t                }\r\n\t                var hash = _.GetHashCode(sessionId + ':' + experimentName);\r\n\t                if (hash === -2147483648)\r\n\t                {\r\n\t                    hash = 0;\r\n\t                }\r\n\t                if (hash < 0)\r\n\t                {\r\n\t                    hash = -hash;\r\n\t                }\r\n\t                return hash < root.Math.floor(2147483647 / 100) * experimentRatio;\r\n\t            }\r\n\t        } catch (ex) {\r\n\t            // do nothing\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t\r\n\t    _.IsEnabledAsync = function(experimentName) {\r\n\t        return _.GetConfigurationAsync().then(function(configuration) {\r\n\t            return $.Deferred().resolve(_.IsEnabled(experimentName, configuration));\r\n\t        }, function() {\r\n\t            return $.Deferred().resolve(_.IsEnabled(experimentName));\r\n\t        });\r\n\t    };\r\n\t\r\n\t    _.JsonDeserialize = function(content) {\r\n\t        return root.JSON && root.JSON.parse ? root.JSON.parse(content) : (new Function('return (' + content + ')'))();\r\n\t    };\r\n\t\r\n\t    _.SetCookie = function(name, value, options) {\r\n\t        var cookie = root.encodeURIComponent(name) + '=' + root.encodeURIComponent(value);\r\n\t        options = options || {};\r\n\t\r\n\t        if (typeof options.expires === 'number' || options.expires instanceof Number) {\r\n\t            var milliseconds = options.expires * 3600 * 1000;\r\n\t            options.expires = new Date();\r\n\t            options.expires.setTime(Number(options.expires) + milliseconds);\r\n\t        }\r\n\t\r\n\t        if (options.expires) {\r\n\t            cookie += '; expires=' + options.expires.toUTCString();\r\n\t        }\r\n\t        if (options.path) {\r\n\t            cookie += '; path=' + options.path;\r\n\t        }\r\n\t        if (options.domain) {\r\n\t            cookie += '; domain=' + options.domain;\r\n\t        }\r\n\t        if (options.secure) {\r\n\t            cookie += '; secure';\r\n\t        }\r\n\t        return root.document.cookie = cookie;\r\n\t    };\r\n\t\r\n\t    if (!_.GetCookie('SID')) {\r\n\t        _.SetCookie('SID', _.GenerateGuid(), {expires: 24 /* hours */, path: '/'});\r\n\t    }\r\n\t\r\n\t    try {\r\n\t        root.AmbientContext = _.GetCookie('AmbientContext');\r\n\t        root.AmbientContext = root.AmbientContext && _.JsonDeserialize(root.AmbientContext);\r\n\t    } catch(ex) {\r\n\t    } finally {\r\n\t        root.AmbientContext = root.AmbientContext || {};\r\n\t        root.AmbientContext['EXP'] = _.GetCustomSettings();\r\n\t        root.AmbientContext['SID'] = _.GetCookie('SID');\r\n\t    }\r\n\t})();\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {(function(){\r\n\t    \"use strict\";\r\n\t\r\n\t    var Trace = __webpack_require__(3);\r\n\t    var util = __webpack_require__(28);\r\n\t\r\n\t    if (window.insight) {\r\n\t        Trace.traceError(\"insight.js is loaded more than once.\");\r\n\t        return;\r\n\t    }\r\n\t    var insight = {};\r\n\t\r\n\t    insight.debugConsoleLogEnabled = false;\r\n\t    insight.debugLogMsgs = [];\r\n\t    insight.debugLog = function (inMsg) {\r\n\t        insight.debugLogMsgs.push(inMsg);\r\n\t        if (insight.debugConsoleLogEnabled) {\r\n\t            console.log(inMsg);\r\n\t        }\r\n\t    };\r\n\t    insight.getMetaTagContent = function (inMTName) {\r\n\t        try {\r\n\t            var myMTContent = $(\"meta[name='\" + inMTName + \"']\");\r\n\t            if (myMTContent && myMTContent.length > 0) {\r\n\t                myMTContent = myMTContent[myMTContent.length - 1].content;\r\n\t            } else {\r\n\t                myMTContent = null;\r\n\t            }\r\n\t            return myMTContent;\r\n\t        } catch (e) {\r\n\t            Trace.traceError(\"getMetaTagContent failed.\", e);\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t    insight.setMetaTagContent = function (inMTName, inMTContent) {\r\n\t        if (!inMTContent) {\r\n\t            Trace.traceError(\"FALSE inMTContent found.\");\r\n\t            return;\r\n\t        }\r\n\t        if (insight.getMetaTagContent(inMTName) === null) {\r\n\t            var myMetaTag = document.createElement(\"meta\");\r\n\t            myMetaTag.name = inMTName;\r\n\t            myMetaTag.content = inMTContent;\r\n\t            document.getElementsByTagName(\"head\")[0].appendChild(myMetaTag);\r\n\t        } else {\r\n\t            $(\"meta[name='\" + inMTName + \"']\").attr(\"content\", inMTContent);\r\n\t        }\r\n\t    };\r\n\t    //Common function to fire custom event on clicked element\r\n\t    insight.processWEDCSCustomEventFromArray = function (inArray) {\r\n\t        if (typeof window.MscomCustomEvent !== \"function\") {\r\n\t            return;\r\n\t        } else if (!inArray || inArray.length === 0) {\r\n\t            window.MscomCustomEvent();\r\n\t            return;\r\n\t        }\r\n\t        window.MscomCustomEvent.apply(this, inArray);\r\n\t    };\r\n\t    ////////////////////// ERROR RELATED\r\n\t    var formatErrorObjectToWedcsArray = function (errorObject) {\r\n\t        var array = [];\r\n\t        if (!errorObject) {\r\n\t            return array;\r\n\t        }\r\n\t        if (errorObject.error) {\r\n\t            if (errorObject.isBubbled) {\r\n\t                if (errorObject.error.data) {\r\n\t                    array.push(\"ms.error\", JSON.stringify(errorObject.error.data).substring(0, 100));\r\n\t                }\r\n\t            } else {\r\n\t                array.push(\"ms.error\", errorObject.error.toString().substring(0, 100));\r\n\t            }\r\n\t        }\r\n\t        if (errorObject.message) {\r\n\t            array.push(\"ms.errormsg\", errorObject.message.substring(0, 30));\r\n\t        }\r\n\t        if (errorObject.source) {\r\n\t            array.push(\"ms.errorsrc\", errorObject.source);\r\n\t        }\r\n\t        if (errorObject.lineno) {\r\n\t            array.push(\"ms.errorlineno\", errorObject.lineno);\r\n\t        }\r\n\t        if (errorObject.colno) {\r\n\t            array.push(\"ms.errorcolno\", errorObject.colno);\r\n\t        }\r\n\t        return array;\r\n\t    };\r\n\t    var errorSubscriber = function (errorObject) {\r\n\t        try {\r\n\t            var tArray = formatErrorObjectToWedcsArray(errorObject);\r\n\t            if (tArray.length > 0) {\r\n\t                insight.processWEDCSCustomEventFromArray(tArray);\r\n\t            }\r\n\t        } catch (ex) {\r\n\t            if (window.console) {\r\n\t                console.error(ex.toString());\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    insight.subscribeErrors = function () {\r\n\t        var Errors = __webpack_require__(4);\r\n\t        Errors.subscribe(errorSubscriber);\r\n\t    };\r\n\t    ////////////////////// Comment Related\r\n\t    var commentSubscriber = function (widget) {\r\n\t        widget.on(\"commentPosted\", function (data) {\r\n\t            if (data && data.id) {\r\n\t                var array = [];\r\n\t                array.push(\"ms.commentid\", JSON.stringify(data.id));\r\n\t                array.push(\"ms.commentdt\", new Date().getTime());\r\n\t                array.push(\"ms.commentet\", \"commentPosted\");\r\n\t                insight.processWEDCSCustomEventFromArray(array);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    var commentErrorHandler = function (reason) {\r\n\t        Trace.traceError(\"comment loading failure\", reason);\r\n\t        var array = [];\r\n\t        array.push(\"ms.commenter\", JSON.stringify(reason));\r\n\t        array.push(\"ms.commentet\", \"commentLoad\");\r\n\t        insight.processWEDCSCustomEventFromArray(array);\r\n\t    };\r\n\t    var sidenoteSubscriber = function (widget) {\r\n\t        widget.on(\"sidenotes.commentPosted\", function (data) {\r\n\t            if (data && data.id) {\r\n\t                var array = [];\r\n\t                array.push(\"ms.commentid\", JSON.stringify(data.id));\r\n\t                array.push(\"ms.commentdt\", new Date().getTime());\r\n\t                array.push(\"ms.commentet\", \"sidenotePosted\");\r\n\t                insight.processWEDCSCustomEventFromArray(array);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    var sidenoteErrorHandler = function (reason) {\r\n\t        Trace.traceError(\"sidenote loading failure\", reason);\r\n\t        var array = [];\r\n\t        array.push(\"ms.commenter\", JSON.stringify(reason));\r\n\t        array.push(\"ms.commentet\", \"sidenoteLoad\");\r\n\t        insight.processWEDCSCustomEventFromArray(array);\r\n\t    };\r\n\t    insight.setupLiveFyreTracking = function () {\r\n\t        var commenting = __webpack_require__(33);\r\n\t        var commentPromise = commenting.getPromise(\"comment-init\");\r\n\t        if(commentPromise) {\r\n\t            commentPromise.then(commentSubscriber, commentErrorHandler);\r\n\t        } else {\r\n\t            Trace.traceError(\"Failed to get comment promise from commenting-callback\");\r\n\t        }\r\n\t        var sidenotePromise = commenting.getPromise(\"sidenote-init\");\r\n\t        if(sidenotePromise) {\r\n\t            sidenotePromise.then(sidenoteSubscriber, sidenoteErrorHandler);\r\n\t        } else {\r\n\t            Trace.traceError(\"Failed to get sidenote promise from commenting-callback\");\r\n\t        }\r\n\t    };\r\n\t    ////////////////////// FOCUS EVENT\r\n\t    insight.firePageFocusEvent = function (type) {\r\n\t        insight.debugLog(\"stepped inside firePageFocusEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.focuseventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.focusorblue\", type);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.setupPageFocusTracking = function () {\r\n\t\r\n\t        $(window).on(\"blur focus\", function (e) {\r\n\t            var prevType = $(this).data(\"prevType\");\r\n\t\r\n\t            if (prevType !== e.type) {   //reduce double fire issues\r\n\t                switch (e.type) {\r\n\t                    case \"blur\":\r\n\t                        insight.debugLog(\"Blured\");\r\n\t                        insight.firePageFocusEvent(\"Blured\");\r\n\t                        break;\r\n\t                    case \"focus\":\r\n\t                        insight.debugLog(\"Focused\");\r\n\t                        insight.firePageFocusEvent(\"Focused\");\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            $(this).data(\"prevType\", e.type);\r\n\t        });\r\n\t\r\n\t    };\r\n\t    ////////////////////// COPY EVENT\r\n\t    insight.fireCopyEvent = function (txt, length) {\r\n\t        insight.debugLog(\"stepped inside fireCopyEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.copyeventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.copycontent\", txt);\r\n\t        tArray.push(\"ms.copycontentlength\", length);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.setupCopyTracking = function () {\r\n\t        $(window).bind(\"copy\", function (e) {\r\n\t            var txt = window.getSelection().toString();\r\n\t            var length = txt.length;\r\n\t            txt = txt.substring(0, 20); //truncate to limit the length of WEDCS event\r\n\t            insight.fireCopyEvent(txt, length);\r\n\t        });\r\n\t    };\r\n\t    ////////////////////// SWITCHER SELECTION\r\n\t    insight.fireSwitcherEvent = function (switcher, selectedValue) {\r\n\t        insight.debugLog(\"stepped inside fireSwitcherEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.switcheventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.switcher\", switcher);\r\n\t        tArray.push(\"ms.switchervalue\", selectedValue);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.setupSwitcherTracking = function () {\r\n\t        $(\".menu-theme select\").change(function () {\r\n\t            var selectedValue = $(\".menu-theme select\").val();\r\n\t            insight.fireSwitcherEvent(\"theme\", selectedValue);\r\n\t        });\r\n\t        $('.menu-platform select').change(function () {\r\n\t            var selectedValue = $(\".menu-platform select\").val();\r\n\t            insight.fireSwitcherEvent(\"platform\", selectedValue);\r\n\t        });\r\n\t        $('.menu-lang select').change(function () {\r\n\t            var selectedValue = $(\".menu-lang select\").val();\r\n\t            insight.fireSwitcherEvent(\"lang\", selectedValue);\r\n\t        });\r\n\t    };\r\n\t    ////////////////////// SCROLL TRACKING\r\n\t    //Scroll Area definition\r\n\t    insight.scrollArea = function (inName) {\r\n\t        this.name = inName;\r\n\t        this.scrollNA = false;\r\n\t        this.scrollQuarter = false;\r\n\t        this.scrollHalf = false;\r\n\t        this.scrollThreeQuarter = false;\r\n\t        this.scrollBot = false;\r\n\t    };\r\n\t    //Track multiple scroll areas per page\r\n\t    insight.currScrollArea = null;\r\n\t    insight.scrollAreaList = [];\r\n\t\r\n\t    insight.setCurrScrollArea = function (inIndex) {\r\n\t        if (typeof inIndex !== \"number\") {\r\n\t            return;\r\n\t        } else if (insight.scrollAreaList.length <= inIndex) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        insight.currScrollArea = insight.scrollAreaList[inIndex];\r\n\t    };\r\n\t\r\n\t    //Page dimension variables\r\n\t    insight.scrollBottomElement = null;\r\n\t    insight.scrollPageHeight = -1;\r\n\t    insight.viewportBottom = -1;\r\n\t    insight.refreshScrollPageDimVars = function () {\r\n\t        var tBottom = 0;\r\n\t        if (insight.scrollBottomElement) {\r\n\t            tBottom = insight.scrollBottomElement.getBoundingClientRect().top + window.pageYOffset;\r\n\t        }\r\n\t        if (tBottom <= 0) {\r\n\t            tBottom = document.body.getBoundingClientRect().height;\r\n\t        }\r\n\t        insight.scrollPageHeight = tBottom;\r\n\t        insight.viewportBottom = window.pageYOffset + window.innerHeight;\r\n\t    };\r\n\t    insight.suppressMobileEvents = false;\r\n\t    insight.fireScrollEvent = function (inScrollValue) {\r\n\t        insight.fireScrollEvent(inScrollValue, \"scroll\");\r\n\t    };\r\n\t    insight.fireScrollStopEvent = function (inScrollValue) {\r\n\t        insight.fireScrollEvent(inScrollValue, \"scroll-stop\");\r\n\t    };\r\n\t    insight.fireScrollEvent = function (inScrollValue, eventType) {\r\n\t        insight.debugLog(\"stepped inside fireScrollEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.pgarea\", \"body\");\r\n\t        tArray.push(\"ms.scnum\", \"scroll-\" + inScrollValue);\r\n\t        tArray.push(\"ms.interactiontype\", \"4\");\r\n\t        tArray.push(\"ms.scn\", eventType);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.processScroll = function (stopEvent) {\r\n\t        window.clearTimeout(insight.scrollResizeTimer);\r\n\t        if (insight.currScrollArea === null) {\r\n\t            return;\r\n\t        }\r\n\t        insight.refreshScrollPageDimVars();\r\n\t        if (insight.scrollPageHeight <= 0) {\r\n\t            return;\r\n\t        } else if (insight.suppressMobileEvents && window.innerWidth <= 510) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        var tCurrPercent = insight.viewportBottom / insight.scrollPageHeight;\r\n\t\r\n\t        if (stopEvent === true) {\r\n\t            insight.fireScrollStopEvent(Math.round(tCurrPercent * 100) + \"%\");\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        if (window.innerHeight > insight.scrollPageHeight * 0.90) {\r\n\t            //Visitor can see the whole page, fire special -na event\r\n\t            if (!insight.currScrollArea.scrollNA) {\r\n\t                insight.currScrollArea.scrollNA = true;\r\n\t                insight.fireScrollEvent(\"na\");\r\n\t            }\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        if (tCurrPercent > 0.25 && !insight.currScrollArea.scrollQuarter) {\r\n\t            insight.currScrollArea.scrollQuarter = true;\r\n\t            insight.fireScrollEvent(\"25%\");\r\n\t        }\r\n\t        if (tCurrPercent > 0.50 && !insight.currScrollArea.scrollHalf) {\r\n\t            insight.currScrollArea.scrollHalf = true;\r\n\t            insight.fireScrollEvent(\"50%\");\r\n\t        }\r\n\t        if (tCurrPercent > 0.75 && !insight.currScrollArea.scrollThreeQuarter) {\r\n\t            insight.currScrollArea.scrollThreeQuarter = true;\r\n\t            insight.fireScrollEvent(\"75%\");\r\n\t        }\r\n\t        if (tCurrPercent > 0.99 && !insight.currScrollArea.scrollBot) {\r\n\t            insight.currScrollArea.scrollBot = true;\r\n\t            insight.fireScrollEvent(\"100%\");\r\n\t        }\r\n\t    };\r\n\t\r\n\t    insight.scrollTimer = null;\r\n\t    insight.scrollResizeTimer = 0;\r\n\t    insight.setupScrollTracking = function () {\r\n\t        insight.scrollBottomElement = $(\"#footer\")[0];\r\n\t\r\n\t        insight.scrollAreaList.push(new insight.scrollArea(\"body\"));\r\n\t        insight.setCurrScrollArea(0);\r\n\t\r\n\t        window.addEventListener(\"scroll\", function () {\r\n\t            insight.processScroll(false);\r\n\t        });\r\n\t\r\n\t        //catch scroll stop event (stop more than 10 seconds)\r\n\t        if (insight.scrollTimer !== null) {\r\n\t            window.clearTimeout(insight.scrollTimer);\r\n\t        }\r\n\t        insight.scrollTimer = window.setTimeout(function () {\r\n\t            insight.processScroll(true);\r\n\t        }, 1000 * 10);\r\n\t\r\n\t        //Note: resize also catches zoom in/out\r\n\t        $(window).resize(function () {\r\n\t            window.clearTimeout(insight.scrollResizeTimer);\r\n\t            insight.scrollResizeTimer = window.setTimeout(function () {\r\n\t                insight.processScroll(false);\r\n\t            }, 500);\r\n\t        });\r\n\t    };\r\n\t    insight.extractMetaFromAmbientContext = function () {\r\n\t        if (window.AmbientContext) {\r\n\t            for (var key in window.AmbientContext) {\r\n\t                if (window.AmbientContext.hasOwnProperty(key)) {\r\n\t                    var content = window.AmbientContext[key];\r\n\t                    if (content) {\r\n\t                        if (!(typeof(content) === \"string\" || content instanceof String)) {\r\n\t                            content = JSON.stringify(content);\r\n\t                        }\r\n\t                    }\r\n\t                    $(\"head\").append(\"<meta name='ms.\" + encodeURI(key.replace(\".\", \"_\")) +\r\n\t                        \"' content='\" + encodeURI(content) + \"' />\");\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    insight.setupPerfTiming = function () {\r\n\t        if (!window.performance || !window.performance.timing) {\r\n\t            return;\r\n\t        }\r\n\t        var navigationStart = window.performance.timing.navigationStart;\r\n\t        if (typeof navigationStart !== \"number\") {\r\n\t            return;\r\n\t        }\r\n\t        //Navigation timing attributes, ref: https://w3c.github.io/navigation-timing/\r\n\t        var keys = [\"redirectStart\", \"redirectEnd\", \"fetchStart\", \"connectStart\", \"connectEnd\", \"requestStart\", \"responseStart\",\r\n\t                    \"responseEnd\", \"domLoading\", \"domInteractive\", \"domContentLoadedEventStart\", \"domContentLoadedEventEnd\",\r\n\t                    \"domComplete\", \"loadEventStart\", \"loadEventEnd\"];\r\n\t        var timeInfoArr = [];\r\n\t        for (var index = 0; index < keys.length; index++) {\r\n\t            var key = keys[index];\r\n\t            if (typeof window.performance.timing[key] !== \"number\") {\r\n\t                timeInfoArr.push(\"\");\r\n\t            } else {\r\n\t                var elapsed = window.performance.timing[key] !== 0 ? window.performance.timing[key] - navigationStart : \"\";\r\n\t                timeInfoArr.push(elapsed);\r\n\t            }\r\n\t        }\r\n\t        $(\"head\").append(\"<meta name='ms.perf.timing' content='\" + timeInfoArr.join() + \"' />\");\r\n\t    };\r\n\t    var biMapping = {\r\n\t        \"author\": \"ms.author\",\r\n\t        \"contentlang\": \"ms.contentlang\",\r\n\t        \"depot_name\": \"ms.depotname\",\r\n\t        \"document_id\": \"ms.documentid\",\r\n\t        \"experiment_id\": \"ms.experimentid\",\r\n\t        \"gitcommit\": \"ms.gitcommit\",\r\n\t        \"original_content_git_url\": \"ms.giturl\",\r\n\t        \"pagetype\": \"ms.opspagetype\",\r\n\t        \"site_name\": \"ms.sitename\",\r\n\t        \"updated_at\": \"ms.publishtime\"\r\n\t    };\r\n\t    insight.setupBiTags = function () {\r\n\t        for (var key in biMapping) {\r\n\t            var content = insight.getMetaTagContent(key);\r\n\t            if (content !== null) {\r\n\t                if (insight.getMetaTagContent(biMapping[key]) === null) {\r\n\t                    insight.setMetaTagContent(biMapping[key], content);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var locale = __webpack_require__(7);\r\n\t        var currentLocale = locale.getLanguageFromUrl();\r\n\t        insight.setMetaTagContent(\"ms.locale\", encodeURI(currentLocale));\r\n\t\r\n\t        //add ms.lang and ms.loc if not exist\r\n\t        if (currentLocale) {\r\n\t            var strs = currentLocale.split(\"-\");\r\n\t            if (insight.getMetaTagContent(\"ms.lang\") === null) {\r\n\t                insight.setMetaTagContent(\"ms.lang\", encodeURI(strs[0]));\r\n\t            }\r\n\t            if (insight.getMetaTagContent(\"ms.loc\") === null) {\r\n\t                insight.setMetaTagContent(\"ms.loc\", strs.length > 1 ? encodeURI(strs[1]) : \"\");\r\n\t            }\r\n\t        }\r\n\t\r\n\t        //gitcommit is an OP specific metadata, if it exists while ms.contentsource tag is missing, pick it up\r\n\t        //Insight team relies on ms.contentsource to find out all OP pages from WEDCS ocean\r\n\t        if (insight.getMetaTagContent(\"gitcommit\") !== null &&\r\n\t                insight.getMetaTagContent(\"ms.contentsource\") === null) {\r\n\t            insight.setMetaTagContent(\"ms.contentsource\", \"OP\");\r\n\t        }\r\n\t    };\r\n\t    insight.isGlobalMetadataEnabled = function (meta) {\r\n\t        if (insight.getMetaTagContent(meta) !== null) {\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    insight.listMSMetadata = function () {\r\n\t        var res = [];\r\n\t        var arr = $(\"meta[name^='ms.']\");\r\n\t        for (var i = 0; i < arr.length; i++) {\r\n\t            res.push(arr[i].name);\r\n\t        }\r\n\t        return res.join(\", \");\r\n\t    };\r\n\t    insight.enableWEDCS = function () {\r\n\t        //WEDCS base settings\r\n\t        window.varClickTracking = 1;\r\n\t        window.varCustomerTracking = 0;\r\n\t        window.varAutoFirePV = 1;\r\n\t        window.route = \"\";\r\n\t        window.ctrl = \"\";\r\n\t\r\n\t        !/* require */(/* empty */function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(14)]; (function(config){\r\n\t            util.loadLibrary(config.paths.wedcs);\r\n\t        }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}());\r\n\t    };\r\n\t\r\n\t    $(document).ready(function () {\r\n\t        try {\r\n\t            insight.subscribeErrors();\r\n\t            insight.extractMetaFromAmbientContext();\r\n\t            insight.setupPerfTiming();\r\n\t            insight.setupBiTags();\r\n\t            insight.enableWEDCS();\r\n\t            insight.setupPageFocusTracking();\r\n\t            insight.setupScrollTracking();\r\n\t            insight.setupCopyTracking();\r\n\t            insight.setupSwitcherTracking();\r\n\t            insight.setupLiveFyreTracking();\r\n\t        } catch (ex) {\r\n\t            Trace.traceError(ex.toString());\r\n\t        }\r\n\t    });\r\n\t\r\n\t    window.insight = insight;\r\n\t})();\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {/* Copyright (C) 2012 Sylvain Hamel\r\n\tProject: https://github.com/redhotsly/simple-expand\r\n\tMIT Licence: https://raw.github.com/redhotsly/simple-expand/master/licence-mit.txt */\r\n\t(function($){\"use strict\";function SimpleExpand(){var that=this;that.defaults={hideMode:\"fadeToggle\",defaultSearchMode:\"parent\",defaultTarget:\".content\",throwOnMissingTarget:true,keepStateInCookie:false,cookieName:\"simple-expand\"};that.settings={};$.extend(that.settings,that.defaults);that.findLevelOneDeep=function(parent,filterSelector,stopAtSelector){return parent.find(filterSelector).filter(function(){return!$(this).parentsUntil(parent,stopAtSelector).length})};that.setInitialState=function(expander,targets){var isExpanded=that.readState(expander);if(isExpanded){expander.removeClass(\"collapsed\").addClass(\"expanded\");that.show(targets)}else{expander.removeClass(\"expanded\").addClass(\"collapsed\");that.hide(targets)}};that.hide=function(targets){if(that.settings.hideMode===\"fadeToggle\"){targets.hide()}else if(that.settings.hideMode===\"basic\"){targets.hide()}};that.show=function(targets){if(that.settings.hideMode===\"fadeToggle\"){targets.show()}else if(that.settings.hideMode===\"basic\"){targets.show()}};that.checkKeepStateInCookiePreconditions=function(){if(that.settings.keepStateInCookie&&$.cookie===undefined){throw new Error(\"simple-expand: keepStateInCookie option requires $.cookie to be defined.\")}};that.readCookie=function(){var jsonString=$.cookie(that.settings.cookieName);if(jsonString===null||jsonString===\"\"){return{}}else{return JSON.parse(jsonString)}};that.readState=function(expander){if(!that.settings.keepStateInCookie){return expander.hasClass(\"expanded\")}var id=expander.attr(\"Id\");if(id===undefined){return}var cookie=that.readCookie();var cookieValue=cookie[id];if(typeof cookieValue!==\"undefined\"){return cookie[id]===true}else{return expander.hasClass(\"expanded\")}};that.saveState=function(expander,isExpanded){if(!that.settings.keepStateInCookie){return}var id=expander.attr(\"Id\");if(id===undefined){return}var cookie=that.readCookie();cookie[id]=isExpanded;$.cookie(that.settings.cookieName,JSON.stringify(cookie),{raw:true,path:window.location.pathname})};that.toggle=function(expander,targets){var isExpanded=that.toggleCss(expander);if(that.settings.hideMode===\"fadeToggle\"){targets.fadeToggle(150)}else if(that.settings.hideMode===\"basic\"){targets.toggle()}else if($.isFunction(that.settings.hideMode)){that.settings.hideMode(expander,targets,isExpanded)}that.saveState(expander,isExpanded);return false};that.toggleCss=function(expander){if(expander.hasClass(\"expanded\")){expander.toggleClass(\"collapsed expanded\");return false}else{expander.toggleClass(\"expanded collapsed\");return true}};that.findTargets=function(expander,searchMode,targetSelector){var targets=[];if(searchMode===\"absolute\"){targets=$(targetSelector)}else if(searchMode===\"relative\"){targets=that.findLevelOneDeep(expander,targetSelector,targetSelector)}else if(searchMode===\"parent\"){var parent=expander.parent();do{targets=that.findLevelOneDeep(parent,targetSelector,targetSelector);if(targets.length===0){parent=parent.parent()}}while(targets.length===0&&parent.length!==0)}return targets};that.activate=function(jquery,options){$.extend(that.settings,options);that.checkKeepStateInCookiePreconditions();jquery.each(function(){var expander=$(this);var targetSelector=expander.attr(\"data-expander-target\")||that.settings.defaultTarget;var searchMode=expander.attr(\"data-expander-target-search\")||that.settings.defaultSearchMode;var targets=that.findTargets(expander,searchMode,targetSelector);if(targets.length===0){if(that.settings.throwOnMissingTarget){throw\"simple-expand: Targets not found\"}return this}that.setInitialState(expander,targets);expander.click(function(){return that.toggle(expander,targets)})})}}window.SimpleExpand=SimpleExpand;$.fn.simpleexpand=function(options){var instance=new SimpleExpand;instance.activate(this,options);return this}})(jQuery);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** f4f7411efecc1349cb25.js\n **/","// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.nextTick()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected() {\n            pendingCount--;\n            if (pendingCount === 0) {\n                deferred.reject(new Error(\n                    \"Can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected.\"\n                ));\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** C:/Program Files (x86)/Jenkins/jobs/docs_template_master_ci/workspace/~/q/q.js\n ** module id = 25\n ** module chunks = 0 3 4 8\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 26\n ** module chunks = 0 3 4 8\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/timers-browserify/main.js\n ** module id = 27\n ** module chunks = 0 3 4 8\n **/","/**\r\n * This class provides utility methods.\r\n */\r\ndefine(['q', 'scriptjs.min'], function(Q, $script) {\r\n    \"use strict\";\r\n\r\n    module.exports.loadLibrary = function(scriptUrl) {\r\n        var deferred = Q.defer();\r\n        $script(scriptUrl, function() {\r\n            deferred.resolve();\r\n        }, function() {\r\n            // use JSON.stringify here because scriptUrl may be a string or an array of string.\r\n            deferred.reject('error loading:' + JSON.stringify(scriptUrl));\r\n        });\r\n        return deferred.promise;\r\n    };\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./util.js\n ** module id = 28\n ** module chunks = 0 3 4 8\n **/","define([],function(){\"use strict\";function n(n,t){for(var e=0,o=n.length;o>e;++e)if(!t(n[e]))return s;return 1}function t(t,e){n(t,function(n){return!e(n)})}function e(i,u,s,h){function g(n){return n.call?n():a[n]}function m(){if(!--j){a[E]=1,y&&y();for(var e in f)n(e.split(\"|\"),g)&&!t(f[e],g)&&(f[e]=[])}}i=i[v]?i:[i];var p=u&&u.call,y=p?u:s,E=p?i.join(\"\"):u,j=i.length,L=p?s:h;return setTimeout(function(){t(i,function(n){return null===n?m():d[n]?(E&&(l[E]=1),2==d[n]&&m()):(d[n]=1,E&&(l[E]=1),void o(!c.test(n)&&r?r+n+\".js\":n,m,E,L))})},0),e}function o(n,t,o,r){var c=i.createElement(\"script\"),a=s;c.onerror=function(){c.onload=c.onerror=c[p]=null,r&&e.ready(o,t,r)},c.onload=c[p]=function(){return\"loaded\"===c[g]&&null===c.nextSibling?void(r&&e.ready(o,t,r)):void(c[g]&&!/^c|loade/.test(c[g])||a||(c.onload=c.onerror=c[p]=null,a=1,d[n]=2,t()))},c.async=1,c.src=n,u.insertBefore(c,u.firstChild)}var r,i=document,u=i.getElementsByTagName(\"head\")[0],c=/^https?:\\/\\//,a={},l={},f={},d={},s=!1,v=\"push\",h=\"DOMContentLoaded\",g=\"readyState\",m=\"addEventListener\",p=\"onreadystatechange\";!i[g]&&i[m]&&(i[m](h,function y(){i.removeEventListener(h,y,s),i[g]=\"complete\"},s),i[g]=\"loading\"),e.get=o,e.order=function(n,t,o){!function r(i){i=n.shift(),n.length?e(i,r):e(i,t,o)}()},e.path=function(n){r=n},e.ready=function(o,r,i){o=o[v]?o:[o];var u=[];return!t(o,function(n){a[n]||u[v](n)})&&n(o,function(n){return a[n]})?r():!function(n){f[n]=f[n]||[],f[n][v](r),i&&i(u)}(o.join(\"|\")),e},e.done=function(n){e([null],n)},module.exports=e});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./vendor/scriptjs.min.js\n ** module id = 29\n ** module chunks = 0 3 4 8\n **/","define(\"commenting-callback\", function () {\r\n    \"use strict\";\r\n\r\n    var deferreds = {\r\n        \"comment-init\": $.Deferred(),\r\n        \"sidenote-init\": $.Deferred()\r\n    };\r\n\r\n    module.exports.attach = function (type, handler, errorHandler) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.promise().then(handler, errorHandler);\r\n        }\r\n    };\r\n\r\n    module.exports.getPromise = function (type) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            return defer.promise();\r\n        }\r\n        return null;\r\n    };\r\n\r\n    module.exports.resolve = function (type, valueObject) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.resolve(valueObject);\r\n        }\r\n    };\r\n\r\n    module.exports.reject = function (type, valueObject) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.reject(valueObject);\r\n        }\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./commenting-callback.js\n ** module id = 33\n ** module chunks = 1 3 5\n **/","/* Sample:\r\n    Experiment.IsEnabledAsync('experiment_name').done(function(fEnabled){\r\n        if (fEnabled) {\r\n            // do something, in case the experiment is ON for this specific session\r\n        } else {\r\n            // do something else, in case the experiment is OFF for this specific session\r\n        }\r\n    });\r\n*/\r\n\r\n// jshint ignore:start\r\nwindow.Experiment = new(function(){\r\n    var root = (function(){return this;}).call(null);\r\n    var _ = this;\r\n\r\n    var m_objConfigurationPromise = (function() {\r\n        var retval = root.NinjaMode ? $.Deferred().resolve({}) : $.ajax({url: '/_chrome/experiment.json'});\r\n        retval.then(function(configuration) {\r\n            _.m_objConfiguration = configuration;\r\n        }, function() {\r\n            _.m_objConfiguration = null;\r\n        });\r\n        return retval;\r\n    })();\r\n\r\n    _.GenerateGuid = function() {\r\n        var timestamp = (new Date).getTime();\r\n        var result = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = (timestamp + Math.random() * 16) % 16 | 0;\r\n            timestamp = Math.floor(timestamp / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return result.toUpperCase();\r\n    };\r\n\r\n    _.GetCookie = function(name) {\r\n        var cookies = root.document.cookie ? root.document.cookie.split('; ') : [];\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var pos = cookies[i].indexOf('=');\r\n            if (name === root.decodeURIComponent(cookies[i].slice(0, pos)))\r\n            {\r\n                var cookie = cookies[i].slice(pos + 1).replace(/\\+/g, ' ');\r\n                cookie = root.decodeURIComponent(cookie);\r\n                return cookie;\r\n            }\r\n        }\r\n    };\r\n\r\n    _.GetHashCode = function(input) {\r\n        var result = 0;\r\n        if (input) {\r\n            for (var i = 0; i < input.length; i++) {\r\n                var c = input.charCodeAt(i);\r\n                result = ((result << 5) - result) + c;\r\n                result = result & result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    _.GetConfigurationAsync = function() {\r\n        if (_.m_objConfiguration) {\r\n            return $.Deferred().resolve(_.m_objConfiguration);\r\n        }\r\n        return m_objConfigurationPromise;\r\n    };\r\n\r\n    _.GetCustomSettings = function() {\r\n        var result = _.GetCookie('EXP');\r\n        result = result && _.JsonDeserialize(result);\r\n        return result;\r\n    };\r\n\r\n    _.IsEnabled = function(experimentName, configuration) {\r\n        try {\r\n            var customSettings = _.GetCustomSettings();\r\n            if (customSettings && customSettings.hasOwnProperty(experimentName)) {\r\n                return Boolean(customSettings[experimentName]);\r\n            }\r\n            if (!configuration) {\r\n                return false;\r\n            }\r\n            var experimentSetting = configuration[experimentName];\r\n            if (experimentSetting) {\r\n                if (experimentSetting.hasOwnProperty('enabled') && !experimentSetting['enabled']) {\r\n                    return false;\r\n                }\r\n                var experimentRatio = experimentSetting['ratio'];\r\n                if (experimentRatio <= 0)\r\n                {\r\n                    return false;\r\n                }\r\n                if (experimentRatio >= 100)\r\n                {\r\n                    return true;\r\n                }\r\n                var sessionId = _.GetCookie('SID');\r\n                if (!sessionId) {\r\n                    return false;\r\n                }\r\n                var hash = _.GetHashCode(sessionId + ':' + experimentName);\r\n                if (hash === -2147483648)\r\n                {\r\n                    hash = 0;\r\n                }\r\n                if (hash < 0)\r\n                {\r\n                    hash = -hash;\r\n                }\r\n                return hash < root.Math.floor(2147483647 / 100) * experimentRatio;\r\n            }\r\n        } catch (ex) {\r\n            // do nothing\r\n        }\r\n        return false;\r\n    };\r\n\r\n    _.IsEnabledAsync = function(experimentName) {\r\n        return _.GetConfigurationAsync().then(function(configuration) {\r\n            return $.Deferred().resolve(_.IsEnabled(experimentName, configuration));\r\n        }, function() {\r\n            return $.Deferred().resolve(_.IsEnabled(experimentName));\r\n        });\r\n    };\r\n\r\n    _.JsonDeserialize = function(content) {\r\n        return root.JSON && root.JSON.parse ? root.JSON.parse(content) : (new Function('return (' + content + ')'))();\r\n    };\r\n\r\n    _.SetCookie = function(name, value, options) {\r\n        var cookie = root.encodeURIComponent(name) + '=' + root.encodeURIComponent(value);\r\n        options = options || {};\r\n\r\n        if (typeof options.expires === 'number' || options.expires instanceof Number) {\r\n            var milliseconds = options.expires * 3600 * 1000;\r\n            options.expires = new Date();\r\n            options.expires.setTime(Number(options.expires) + milliseconds);\r\n        }\r\n\r\n        if (options.expires) {\r\n            cookie += '; expires=' + options.expires.toUTCString();\r\n        }\r\n        if (options.path) {\r\n            cookie += '; path=' + options.path;\r\n        }\r\n        if (options.domain) {\r\n            cookie += '; domain=' + options.domain;\r\n        }\r\n        if (options.secure) {\r\n            cookie += '; secure';\r\n        }\r\n        return root.document.cookie = cookie;\r\n    };\r\n\r\n    if (!_.GetCookie('SID')) {\r\n        _.SetCookie('SID', _.GenerateGuid(), {expires: 24 /* hours */, path: '/'});\r\n    }\r\n\r\n    try {\r\n        root.AmbientContext = _.GetCookie('AmbientContext');\r\n        root.AmbientContext = root.AmbientContext && _.JsonDeserialize(root.AmbientContext);\r\n    } catch(ex) {\r\n    } finally {\r\n        root.AmbientContext = root.AmbientContext || {};\r\n        root.AmbientContext['EXP'] = _.GetCustomSettings();\r\n        root.AmbientContext['SID'] = _.GetCookie('SID');\r\n    }\r\n})();\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./experiment.js\n ** module id = 34\n ** module chunks = 1 3 5\n **/","(function(){\r\n    \"use strict\";\r\n\r\n    var Trace = require(\"trace\");\r\n    var util = require('util');\r\n\r\n    if (window.insight) {\r\n        Trace.traceError(\"insight.js is loaded more than once.\");\r\n        return;\r\n    }\r\n    var insight = {};\r\n\r\n    insight.debugConsoleLogEnabled = false;\r\n    insight.debugLogMsgs = [];\r\n    insight.debugLog = function (inMsg) {\r\n        insight.debugLogMsgs.push(inMsg);\r\n        if (insight.debugConsoleLogEnabled) {\r\n            console.log(inMsg);\r\n        }\r\n    };\r\n    insight.getMetaTagContent = function (inMTName) {\r\n        try {\r\n            var myMTContent = $(\"meta[name='\" + inMTName + \"']\");\r\n            if (myMTContent && myMTContent.length > 0) {\r\n                myMTContent = myMTContent[myMTContent.length - 1].content;\r\n            } else {\r\n                myMTContent = null;\r\n            }\r\n            return myMTContent;\r\n        } catch (e) {\r\n            Trace.traceError(\"getMetaTagContent failed.\", e);\r\n            return null;\r\n        }\r\n    };\r\n    insight.setMetaTagContent = function (inMTName, inMTContent) {\r\n        if (!inMTContent) {\r\n            Trace.traceError(\"FALSE inMTContent found.\");\r\n            return;\r\n        }\r\n        if (insight.getMetaTagContent(inMTName) === null) {\r\n            var myMetaTag = document.createElement(\"meta\");\r\n            myMetaTag.name = inMTName;\r\n            myMetaTag.content = inMTContent;\r\n            document.getElementsByTagName(\"head\")[0].appendChild(myMetaTag);\r\n        } else {\r\n            $(\"meta[name='\" + inMTName + \"']\").attr(\"content\", inMTContent);\r\n        }\r\n    };\r\n    //Common function to fire custom event on clicked element\r\n    insight.processWEDCSCustomEventFromArray = function (inArray) {\r\n        if (typeof window.MscomCustomEvent !== \"function\") {\r\n            return;\r\n        } else if (!inArray || inArray.length === 0) {\r\n            window.MscomCustomEvent();\r\n            return;\r\n        }\r\n        window.MscomCustomEvent.apply(this, inArray);\r\n    };\r\n    ////////////////////// ERROR RELATED\r\n    var formatErrorObjectToWedcsArray = function (errorObject) {\r\n        var array = [];\r\n        if (!errorObject) {\r\n            return array;\r\n        }\r\n        if (errorObject.error) {\r\n            if (errorObject.isBubbled) {\r\n                if (errorObject.error.data) {\r\n                    array.push(\"ms.error\", JSON.stringify(errorObject.error.data).substring(0, 100));\r\n                }\r\n            } else {\r\n                array.push(\"ms.error\", errorObject.error.toString().substring(0, 100));\r\n            }\r\n        }\r\n        if (errorObject.message) {\r\n            array.push(\"ms.errormsg\", errorObject.message.substring(0, 30));\r\n        }\r\n        if (errorObject.source) {\r\n            array.push(\"ms.errorsrc\", errorObject.source);\r\n        }\r\n        if (errorObject.lineno) {\r\n            array.push(\"ms.errorlineno\", errorObject.lineno);\r\n        }\r\n        if (errorObject.colno) {\r\n            array.push(\"ms.errorcolno\", errorObject.colno);\r\n        }\r\n        return array;\r\n    };\r\n    var errorSubscriber = function (errorObject) {\r\n        try {\r\n            var tArray = formatErrorObjectToWedcsArray(errorObject);\r\n            if (tArray.length > 0) {\r\n                insight.processWEDCSCustomEventFromArray(tArray);\r\n            }\r\n        } catch (ex) {\r\n            if (window.console) {\r\n                console.error(ex.toString());\r\n            }\r\n        }\r\n    };\r\n    insight.subscribeErrors = function () {\r\n        var Errors = require(\"errors\");\r\n        Errors.subscribe(errorSubscriber);\r\n    };\r\n    ////////////////////// Comment Related\r\n    var commentSubscriber = function (widget) {\r\n        widget.on(\"commentPosted\", function (data) {\r\n            if (data && data.id) {\r\n                var array = [];\r\n                array.push(\"ms.commentid\", JSON.stringify(data.id));\r\n                array.push(\"ms.commentdt\", new Date().getTime());\r\n                array.push(\"ms.commentet\", \"commentPosted\");\r\n                insight.processWEDCSCustomEventFromArray(array);\r\n            }\r\n        });\r\n    };\r\n    var commentErrorHandler = function (reason) {\r\n        Trace.traceError(\"comment loading failure\", reason);\r\n        var array = [];\r\n        array.push(\"ms.commenter\", JSON.stringify(reason));\r\n        array.push(\"ms.commentet\", \"commentLoad\");\r\n        insight.processWEDCSCustomEventFromArray(array);\r\n    };\r\n    var sidenoteSubscriber = function (widget) {\r\n        widget.on(\"sidenotes.commentPosted\", function (data) {\r\n            if (data && data.id) {\r\n                var array = [];\r\n                array.push(\"ms.commentid\", JSON.stringify(data.id));\r\n                array.push(\"ms.commentdt\", new Date().getTime());\r\n                array.push(\"ms.commentet\", \"sidenotePosted\");\r\n                insight.processWEDCSCustomEventFromArray(array);\r\n            }\r\n        });\r\n    };\r\n    var sidenoteErrorHandler = function (reason) {\r\n        Trace.traceError(\"sidenote loading failure\", reason);\r\n        var array = [];\r\n        array.push(\"ms.commenter\", JSON.stringify(reason));\r\n        array.push(\"ms.commentet\", \"sidenoteLoad\");\r\n        insight.processWEDCSCustomEventFromArray(array);\r\n    };\r\n    insight.setupLiveFyreTracking = function () {\r\n        var commenting = require(\"commenting-callback\");\r\n        var commentPromise = commenting.getPromise(\"comment-init\");\r\n        if(commentPromise) {\r\n            commentPromise.then(commentSubscriber, commentErrorHandler);\r\n        } else {\r\n            Trace.traceError(\"Failed to get comment promise from commenting-callback\");\r\n        }\r\n        var sidenotePromise = commenting.getPromise(\"sidenote-init\");\r\n        if(sidenotePromise) {\r\n            sidenotePromise.then(sidenoteSubscriber, sidenoteErrorHandler);\r\n        } else {\r\n            Trace.traceError(\"Failed to get sidenote promise from commenting-callback\");\r\n        }\r\n    };\r\n    ////////////////////// FOCUS EVENT\r\n    insight.firePageFocusEvent = function (type) {\r\n        insight.debugLog(\"stepped inside firePageFocusEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.focuseventtime\", new Date().getTime());\r\n        tArray.push(\"ms.focusorblue\", type);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.setupPageFocusTracking = function () {\r\n\r\n        $(window).on(\"blur focus\", function (e) {\r\n            var prevType = $(this).data(\"prevType\");\r\n\r\n            if (prevType !== e.type) {   //reduce double fire issues\r\n                switch (e.type) {\r\n                    case \"blur\":\r\n                        insight.debugLog(\"Blured\");\r\n                        insight.firePageFocusEvent(\"Blured\");\r\n                        break;\r\n                    case \"focus\":\r\n                        insight.debugLog(\"Focused\");\r\n                        insight.firePageFocusEvent(\"Focused\");\r\n                        break;\r\n                }\r\n            }\r\n            $(this).data(\"prevType\", e.type);\r\n        });\r\n\r\n    };\r\n    ////////////////////// COPY EVENT\r\n    insight.fireCopyEvent = function (txt, length) {\r\n        insight.debugLog(\"stepped inside fireCopyEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.copyeventtime\", new Date().getTime());\r\n        tArray.push(\"ms.copycontent\", txt);\r\n        tArray.push(\"ms.copycontentlength\", length);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.setupCopyTracking = function () {\r\n        $(window).bind(\"copy\", function (e) {\r\n            var txt = window.getSelection().toString();\r\n            var length = txt.length;\r\n            txt = txt.substring(0, 20); //truncate to limit the length of WEDCS event\r\n            insight.fireCopyEvent(txt, length);\r\n        });\r\n    };\r\n    ////////////////////// SWITCHER SELECTION\r\n    insight.fireSwitcherEvent = function (switcher, selectedValue) {\r\n        insight.debugLog(\"stepped inside fireSwitcherEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.switcheventtime\", new Date().getTime());\r\n        tArray.push(\"ms.switcher\", switcher);\r\n        tArray.push(\"ms.switchervalue\", selectedValue);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.setupSwitcherTracking = function () {\r\n        $(\".menu-theme select\").change(function () {\r\n            var selectedValue = $(\".menu-theme select\").val();\r\n            insight.fireSwitcherEvent(\"theme\", selectedValue);\r\n        });\r\n        $('.menu-platform select').change(function () {\r\n            var selectedValue = $(\".menu-platform select\").val();\r\n            insight.fireSwitcherEvent(\"platform\", selectedValue);\r\n        });\r\n        $('.menu-lang select').change(function () {\r\n            var selectedValue = $(\".menu-lang select\").val();\r\n            insight.fireSwitcherEvent(\"lang\", selectedValue);\r\n        });\r\n    };\r\n    ////////////////////// SCROLL TRACKING\r\n    //Scroll Area definition\r\n    insight.scrollArea = function (inName) {\r\n        this.name = inName;\r\n        this.scrollNA = false;\r\n        this.scrollQuarter = false;\r\n        this.scrollHalf = false;\r\n        this.scrollThreeQuarter = false;\r\n        this.scrollBot = false;\r\n    };\r\n    //Track multiple scroll areas per page\r\n    insight.currScrollArea = null;\r\n    insight.scrollAreaList = [];\r\n\r\n    insight.setCurrScrollArea = function (inIndex) {\r\n        if (typeof inIndex !== \"number\") {\r\n            return;\r\n        } else if (insight.scrollAreaList.length <= inIndex) {\r\n            return;\r\n        }\r\n\r\n        insight.currScrollArea = insight.scrollAreaList[inIndex];\r\n    };\r\n\r\n    //Page dimension variables\r\n    insight.scrollBottomElement = null;\r\n    insight.scrollPageHeight = -1;\r\n    insight.viewportBottom = -1;\r\n    insight.refreshScrollPageDimVars = function () {\r\n        var tBottom = 0;\r\n        if (insight.scrollBottomElement) {\r\n            tBottom = insight.scrollBottomElement.getBoundingClientRect().top + window.pageYOffset;\r\n        }\r\n        if (tBottom <= 0) {\r\n            tBottom = document.body.getBoundingClientRect().height;\r\n        }\r\n        insight.scrollPageHeight = tBottom;\r\n        insight.viewportBottom = window.pageYOffset + window.innerHeight;\r\n    };\r\n    insight.suppressMobileEvents = false;\r\n    insight.fireScrollEvent = function (inScrollValue) {\r\n        insight.fireScrollEvent(inScrollValue, \"scroll\");\r\n    };\r\n    insight.fireScrollStopEvent = function (inScrollValue) {\r\n        insight.fireScrollEvent(inScrollValue, \"scroll-stop\");\r\n    };\r\n    insight.fireScrollEvent = function (inScrollValue, eventType) {\r\n        insight.debugLog(\"stepped inside fireScrollEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.pgarea\", \"body\");\r\n        tArray.push(\"ms.scnum\", \"scroll-\" + inScrollValue);\r\n        tArray.push(\"ms.interactiontype\", \"4\");\r\n        tArray.push(\"ms.scn\", eventType);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.processScroll = function (stopEvent) {\r\n        window.clearTimeout(insight.scrollResizeTimer);\r\n        if (insight.currScrollArea === null) {\r\n            return;\r\n        }\r\n        insight.refreshScrollPageDimVars();\r\n        if (insight.scrollPageHeight <= 0) {\r\n            return;\r\n        } else if (insight.suppressMobileEvents && window.innerWidth <= 510) {\r\n            return;\r\n        }\r\n\r\n        var tCurrPercent = insight.viewportBottom / insight.scrollPageHeight;\r\n\r\n        if (stopEvent === true) {\r\n            insight.fireScrollStopEvent(Math.round(tCurrPercent * 100) + \"%\");\r\n            return;\r\n        }\r\n\r\n        if (window.innerHeight > insight.scrollPageHeight * 0.90) {\r\n            //Visitor can see the whole page, fire special -na event\r\n            if (!insight.currScrollArea.scrollNA) {\r\n                insight.currScrollArea.scrollNA = true;\r\n                insight.fireScrollEvent(\"na\");\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (tCurrPercent > 0.25 && !insight.currScrollArea.scrollQuarter) {\r\n            insight.currScrollArea.scrollQuarter = true;\r\n            insight.fireScrollEvent(\"25%\");\r\n        }\r\n        if (tCurrPercent > 0.50 && !insight.currScrollArea.scrollHalf) {\r\n            insight.currScrollArea.scrollHalf = true;\r\n            insight.fireScrollEvent(\"50%\");\r\n        }\r\n        if (tCurrPercent > 0.75 && !insight.currScrollArea.scrollThreeQuarter) {\r\n            insight.currScrollArea.scrollThreeQuarter = true;\r\n            insight.fireScrollEvent(\"75%\");\r\n        }\r\n        if (tCurrPercent > 0.99 && !insight.currScrollArea.scrollBot) {\r\n            insight.currScrollArea.scrollBot = true;\r\n            insight.fireScrollEvent(\"100%\");\r\n        }\r\n    };\r\n\r\n    insight.scrollTimer = null;\r\n    insight.scrollResizeTimer = 0;\r\n    insight.setupScrollTracking = function () {\r\n        insight.scrollBottomElement = $(\"#footer\")[0];\r\n\r\n        insight.scrollAreaList.push(new insight.scrollArea(\"body\"));\r\n        insight.setCurrScrollArea(0);\r\n\r\n        window.addEventListener(\"scroll\", function () {\r\n            insight.processScroll(false);\r\n        });\r\n\r\n        //catch scroll stop event (stop more than 10 seconds)\r\n        if (insight.scrollTimer !== null) {\r\n            window.clearTimeout(insight.scrollTimer);\r\n        }\r\n        insight.scrollTimer = window.setTimeout(function () {\r\n            insight.processScroll(true);\r\n        }, 1000 * 10);\r\n\r\n        //Note: resize also catches zoom in/out\r\n        $(window).resize(function () {\r\n            window.clearTimeout(insight.scrollResizeTimer);\r\n            insight.scrollResizeTimer = window.setTimeout(function () {\r\n                insight.processScroll(false);\r\n            }, 500);\r\n        });\r\n    };\r\n    insight.extractMetaFromAmbientContext = function () {\r\n        if (window.AmbientContext) {\r\n            for (var key in window.AmbientContext) {\r\n                if (window.AmbientContext.hasOwnProperty(key)) {\r\n                    var content = window.AmbientContext[key];\r\n                    if (content) {\r\n                        if (!(typeof(content) === \"string\" || content instanceof String)) {\r\n                            content = JSON.stringify(content);\r\n                        }\r\n                    }\r\n                    $(\"head\").append(\"<meta name='ms.\" + encodeURI(key.replace(\".\", \"_\")) +\r\n                        \"' content='\" + encodeURI(content) + \"' />\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    insight.setupPerfTiming = function () {\r\n        if (!window.performance || !window.performance.timing) {\r\n            return;\r\n        }\r\n        var navigationStart = window.performance.timing.navigationStart;\r\n        if (typeof navigationStart !== \"number\") {\r\n            return;\r\n        }\r\n        //Navigation timing attributes, ref: https://w3c.github.io/navigation-timing/\r\n        var keys = [\"redirectStart\", \"redirectEnd\", \"fetchStart\", \"connectStart\", \"connectEnd\", \"requestStart\", \"responseStart\",\r\n                    \"responseEnd\", \"domLoading\", \"domInteractive\", \"domContentLoadedEventStart\", \"domContentLoadedEventEnd\",\r\n                    \"domComplete\", \"loadEventStart\", \"loadEventEnd\"];\r\n        var timeInfoArr = [];\r\n        for (var index = 0; index < keys.length; index++) {\r\n            var key = keys[index];\r\n            if (typeof window.performance.timing[key] !== \"number\") {\r\n                timeInfoArr.push(\"\");\r\n            } else {\r\n                var elapsed = window.performance.timing[key] !== 0 ? window.performance.timing[key] - navigationStart : \"\";\r\n                timeInfoArr.push(elapsed);\r\n            }\r\n        }\r\n        $(\"head\").append(\"<meta name='ms.perf.timing' content='\" + timeInfoArr.join() + \"' />\");\r\n    };\r\n    var biMapping = {\r\n        \"author\": \"ms.author\",\r\n        \"contentlang\": \"ms.contentlang\",\r\n        \"depot_name\": \"ms.depotname\",\r\n        \"document_id\": \"ms.documentid\",\r\n        \"experiment_id\": \"ms.experimentid\",\r\n        \"gitcommit\": \"ms.gitcommit\",\r\n        \"original_content_git_url\": \"ms.giturl\",\r\n        \"pagetype\": \"ms.opspagetype\",\r\n        \"site_name\": \"ms.sitename\",\r\n        \"updated_at\": \"ms.publishtime\"\r\n    };\r\n    insight.setupBiTags = function () {\r\n        for (var key in biMapping) {\r\n            var content = insight.getMetaTagContent(key);\r\n            if (content !== null) {\r\n                if (insight.getMetaTagContent(biMapping[key]) === null) {\r\n                    insight.setMetaTagContent(biMapping[key], content);\r\n                }\r\n            }\r\n        }\r\n        var locale = require(\"locale\");\r\n        var currentLocale = locale.getLanguageFromUrl();\r\n        insight.setMetaTagContent(\"ms.locale\", encodeURI(currentLocale));\r\n\r\n        //add ms.lang and ms.loc if not exist\r\n        if (currentLocale) {\r\n            var strs = currentLocale.split(\"-\");\r\n            if (insight.getMetaTagContent(\"ms.lang\") === null) {\r\n                insight.setMetaTagContent(\"ms.lang\", encodeURI(strs[0]));\r\n            }\r\n            if (insight.getMetaTagContent(\"ms.loc\") === null) {\r\n                insight.setMetaTagContent(\"ms.loc\", strs.length > 1 ? encodeURI(strs[1]) : \"\");\r\n            }\r\n        }\r\n\r\n        //gitcommit is an OP specific metadata, if it exists while ms.contentsource tag is missing, pick it up\r\n        //Insight team relies on ms.contentsource to find out all OP pages from WEDCS ocean\r\n        if (insight.getMetaTagContent(\"gitcommit\") !== null &&\r\n                insight.getMetaTagContent(\"ms.contentsource\") === null) {\r\n            insight.setMetaTagContent(\"ms.contentsource\", \"OP\");\r\n        }\r\n    };\r\n    insight.isGlobalMetadataEnabled = function (meta) {\r\n        if (insight.getMetaTagContent(meta) !== null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    insight.listMSMetadata = function () {\r\n        var res = [];\r\n        var arr = $(\"meta[name^='ms.']\");\r\n        for (var i = 0; i < arr.length; i++) {\r\n            res.push(arr[i].name);\r\n        }\r\n        return res.join(\", \");\r\n    };\r\n    insight.enableWEDCS = function () {\r\n        //WEDCS base settings\r\n        window.varClickTracking = 1;\r\n        window.varCustomerTracking = 0;\r\n        window.varAutoFirePV = 1;\r\n        window.route = \"\";\r\n        window.ctrl = \"\";\r\n\r\n        require([\"docs.config\"], function(config){\r\n            util.loadLibrary(config.paths.wedcs);\r\n        });\r\n    };\r\n\r\n    $(document).ready(function () {\r\n        try {\r\n            insight.subscribeErrors();\r\n            insight.extractMetaFromAmbientContext();\r\n            insight.setupPerfTiming();\r\n            insight.setupBiTags();\r\n            insight.enableWEDCS();\r\n            insight.setupPageFocusTracking();\r\n            insight.setupScrollTracking();\r\n            insight.setupCopyTracking();\r\n            insight.setupSwitcherTracking();\r\n            insight.setupLiveFyreTracking();\r\n        } catch (ex) {\r\n            Trace.traceError(ex.toString());\r\n        }\r\n    });\r\n\r\n    window.insight = insight;\r\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./insight.js\n ** module id = 35\n ** module chunks = 1 3 5\n **/","/* Copyright (C) 2012 Sylvain Hamel\r\nProject: https://github.com/redhotsly/simple-expand\r\nMIT Licence: https://raw.github.com/redhotsly/simple-expand/master/licence-mit.txt */\r\n(function($){\"use strict\";function SimpleExpand(){var that=this;that.defaults={hideMode:\"fadeToggle\",defaultSearchMode:\"parent\",defaultTarget:\".content\",throwOnMissingTarget:true,keepStateInCookie:false,cookieName:\"simple-expand\"};that.settings={};$.extend(that.settings,that.defaults);that.findLevelOneDeep=function(parent,filterSelector,stopAtSelector){return parent.find(filterSelector).filter(function(){return!$(this).parentsUntil(parent,stopAtSelector).length})};that.setInitialState=function(expander,targets){var isExpanded=that.readState(expander);if(isExpanded){expander.removeClass(\"collapsed\").addClass(\"expanded\");that.show(targets)}else{expander.removeClass(\"expanded\").addClass(\"collapsed\");that.hide(targets)}};that.hide=function(targets){if(that.settings.hideMode===\"fadeToggle\"){targets.hide()}else if(that.settings.hideMode===\"basic\"){targets.hide()}};that.show=function(targets){if(that.settings.hideMode===\"fadeToggle\"){targets.show()}else if(that.settings.hideMode===\"basic\"){targets.show()}};that.checkKeepStateInCookiePreconditions=function(){if(that.settings.keepStateInCookie&&$.cookie===undefined){throw new Error(\"simple-expand: keepStateInCookie option requires $.cookie to be defined.\")}};that.readCookie=function(){var jsonString=$.cookie(that.settings.cookieName);if(jsonString===null||jsonString===\"\"){return{}}else{return JSON.parse(jsonString)}};that.readState=function(expander){if(!that.settings.keepStateInCookie){return expander.hasClass(\"expanded\")}var id=expander.attr(\"Id\");if(id===undefined){return}var cookie=that.readCookie();var cookieValue=cookie[id];if(typeof cookieValue!==\"undefined\"){return cookie[id]===true}else{return expander.hasClass(\"expanded\")}};that.saveState=function(expander,isExpanded){if(!that.settings.keepStateInCookie){return}var id=expander.attr(\"Id\");if(id===undefined){return}var cookie=that.readCookie();cookie[id]=isExpanded;$.cookie(that.settings.cookieName,JSON.stringify(cookie),{raw:true,path:window.location.pathname})};that.toggle=function(expander,targets){var isExpanded=that.toggleCss(expander);if(that.settings.hideMode===\"fadeToggle\"){targets.fadeToggle(150)}else if(that.settings.hideMode===\"basic\"){targets.toggle()}else if($.isFunction(that.settings.hideMode)){that.settings.hideMode(expander,targets,isExpanded)}that.saveState(expander,isExpanded);return false};that.toggleCss=function(expander){if(expander.hasClass(\"expanded\")){expander.toggleClass(\"collapsed expanded\");return false}else{expander.toggleClass(\"expanded collapsed\");return true}};that.findTargets=function(expander,searchMode,targetSelector){var targets=[];if(searchMode===\"absolute\"){targets=$(targetSelector)}else if(searchMode===\"relative\"){targets=that.findLevelOneDeep(expander,targetSelector,targetSelector)}else if(searchMode===\"parent\"){var parent=expander.parent();do{targets=that.findLevelOneDeep(parent,targetSelector,targetSelector);if(targets.length===0){parent=parent.parent()}}while(targets.length===0&&parent.length!==0)}return targets};that.activate=function(jquery,options){$.extend(that.settings,options);that.checkKeepStateInCookiePreconditions();jquery.each(function(){var expander=$(this);var targetSelector=expander.attr(\"data-expander-target\")||that.settings.defaultTarget;var searchMode=expander.attr(\"data-expander-target-search\")||that.settings.defaultSearchMode;var targets=that.findTargets(expander,searchMode,targetSelector);if(targets.length===0){if(that.settings.throwOnMissingTarget){throw\"simple-expand: Targets not found\"}return this}that.setInitialState(expander,targets);expander.click(function(){return that.toggle(expander,targets)})})}}window.SimpleExpand=SimpleExpand;$.fn.simpleexpand=function(options){var instance=new SimpleExpand;instance.activate(this,options);return this}})(jQuery);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./vendor/simple-expand.min.js\n ** module id = 37\n ** module chunks = 3 4 8\n **/"],"sourceRoot":""}